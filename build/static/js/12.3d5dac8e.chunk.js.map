{"version":3,"sources":["Temps/FAEUserInfoTabs/FAEUserInfoTabs.js","Pages/UserInfoPageLayout/UserInfoPageLayout.js","redux/actions/dateTimeSelectionPageActions.js","redux/actions/dateTimeSelectionForClinicsActions.js","redux/actions/bookingEditPageActions.js","Pages/BookingEditPage/BookingEditPage.js"],"names":["FAEUserInfoTabs","_ref","_ref$className","className","_ref$tabs","tabs","renderOption","_ref$activeTab","activeTab","rest","_objectWithoutProperties","_excluded","selectedTab","value","toLowerCase","_jsx","_Fragment","children","_objectSpread","concat","Children","toArray","map","tab","index","label","_tab$href","href","icon","svgIconSrc","_excluded2","_jsxs","FAEText","tertiary","FAEImage","src","target","rel","userInfoTabs","getFileSrcFromPublicFolder","onClick","history","push","UserInfoPageLayout","childWidth","paddingTop","location","useLocation","pathname","find","addSpaces","includes","toLocaleLowerCase","FAEContainer","style","width","APP_BASE_URL","process","REACT_APP_BASE_URL","PAYMENT_JDS","REACT_APP_PAYMENT_JDS","getAvaliableBookingSlots","selectedDate","serviceId","bookingDuration","providerId","fetchAction","type","endpoint","payload","JSON","stringify","bookingDate","providersId","duration","verb","saveBookingDateAndTime","_ref2","selectedTime","bookingId","cartId","notes","bookingStartTime","bookingEndTime","addressId","headers","contentType","bookingTime","tempBookingId","customerNotes","saveBookingDateAndTimeNextTime","_ref3","makeDateTimeNextPageFalse","APP_BASE_URL_JDS","getBookingSlots","latitude","longitude","countryId","distance","serviceVenu","Date","getHours","length","getMinutes","getFullYear","getMonth","getDate","alternateGetBookingSlots","isInClinic","businessId","tempbookingid","isBusiness","SaveAlternateTempBooking","APP_BASE_URL_CRM","REACT_APP_BASE_URL_2","getEditBookingSlots","currentTime","getSeconds","genderPreference","saveEditedBookingDateTime","userId","customerId","endTime","startTime","sessionId","isSessionBookingAPI","providerIds","makeBookingEditedToDefault","loaderImage","connect","_ref2$bookingEditPage","bookingEditPageReducer","error","timeSlots","bookingEdited","_ref2$dateTimeSelecti","dateTimeSelectionForClinicsReducer","alternatetimeSlots","loading","dispatch","bindActionCreators","_startEndTime$","_startEndTime$2","document","title","getCookies","service","useParams","serviceName","state","isInHouse","serviceTypeId","isOnline","_useState","useState","todayDate","_useState2","_slicedToArray","setSelectedDate","_useState3","_useState4","setSelectedTime","useEffect","renameSLotsKeys","obj","startEndTime","filter","eachSlot","availablefrom","availableto","FAETitle","logo","FAEDateTimeSelection","loaderForTimeSlots","loaderPropsForTimeSlots","height","getSelectedDate","getSelectedTime","slots","faeBookingTimeSlotsParser","display","justifyContent","FAEButton","e","preventDefault","isNaN","parse"],"mappings":"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","file":"static/js/12.3d5dac8e.chunk.js","sourcesContent":["//libs\r\nimport React, { Children } from \"react\";\r\n\r\n//src\r\nimport { FAEText } from \"@findanexpert-fae/components\";\r\n\r\n//scss\r\nimport \"./FAEUserInfoTabs.scss\";\r\nimport { FAEImage } from \"@findanexpert-fae/components/dist/stories/FAEImage/FAEImage\";\r\n\r\nexport const FAEUserInfoTabs = ({\r\n  className = \"\",\r\n  tabs = [],\r\n  renderOption,\r\n  activeTab = \"\",\r\n  ...rest\r\n}) => {\r\n  const selectedTab = (value) => {\r\n    return value.toLowerCase() === activeTab.toLowerCase() ? \"active-tab\" : \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className={`fae--user-info-tabs-main-container ${className}`}\r\n        {...rest}\r\n      >\r\n        {Children.toArray(\r\n          tabs.map((tab, index) => {\r\n            const { label, href = \"\", className, icon, svgIconSrc, ...rest } = tab;\r\n            return href === \"\" ? (\r\n             <> \r\n           \r\n             <FAEText\r\n                tertiary={selectedTab(label) === \"active-tab\" ? false : true}\r\n                {...rest}\r\n                className={`fae--user-info-tab ${selectedTab(\r\n                  label\r\n                )} ${className}`}  >\r\n                {!svgIconSrc==\"\" && <FAEImage className=\"fae-sidebar-icon\" src={svgIconSrc} />}\r\n                {!icon==\"\" && <div className=\"fae-sidebar-icon\"> {icon}  </div>}\r\n                 {renderOption ? renderOption(tab) : label}\r\n              </FAEText>\r\n              </>\r\n            ) : (\r\n              <a\r\n                className={`fae--user-info-tab ${className}`}\r\n                target=\"_blank\"\r\n                href={href}\r\n                rel=\"noreferrer\"\r\n                {...rest}\r\n              >\r\n                <FAEText>{renderOption ? renderOption(tab) : label}</FAEText>\r\n              </a>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","//libs\r\nimport React from \"react\";\r\nimport {  FAEContainer } from \"@findanexpert-fae/components\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\n//src\r\nimport { addSpaces, getFileSrcFromPublicFolder } from \"../../utils\";\r\nimport history from \"../../history\";\r\nimport {FAEUserInfoTabs} from \"../../Temps/FAEUserInfoTabs/FAEUserInfoTabs\"\r\n//scss\r\nimport \"./UserInfoPageLayout.scss\";\r\nimport { FAEImage } from \"@findanexpert-fae/components/dist/stories/FAEImage/FAEImage\";\r\n \r\nconst userInfoTabs = [\r\n  {\r\n    label: \"Profile\",\r\n    svgIconSrc:  getFileSrcFromPublicFolder(\"icons/profileIcon.svg\"),\r\n    onClick: () => history.push(\"/profile\"),\r\n  },\r\n  {\r\n    label: \"Your Bookings\",\r\n    svgIconSrc:  getFileSrcFromPublicFolder(\"icons/bookingGreyColor.svg\"),\r\n    onClick: () => history.push(\"/your-bookings/upcoming\"),\r\n  }, \r\n  // {\r\n  //   label: \"Your Addresses\",\r\n  //   svgIconSrc:  getFileSrcFromPublicFolder(\"icons/locationgrey.svg\"),\r\n  //   onClick: () => history.push(\"/your-addresses\"),\r\n  // }, \r\n  {\r\n    label: \"Payment Details\",\r\n    svgIconSrc:  getFileSrcFromPublicFolder(\"icons/paymentgreyicons.svg\"),\r\n    onClick: () => history.push(\"/payment-details\"),\r\n  },\r\n  // {\r\n  //   label: \"Switch Country\",\r\n  //   svgIconSrc:  getFileSrcFromPublicFolder(\"icons/swithc-country.svg\"),\r\n  //   onClick: () => history.push(\"/switch-country\"),\r\n  // }, \r\n  // {\r\n  //   label:  \"Your Vouchers\", \r\n  //   svgIconSrc:  getFileSrcFromPublicFolder(\"icons/vouchergrey.svg\"),\r\n  //   onClick: () => history.push(\"/your-vouchers/service-voucher\"),\r\n  // }, \r\n];\r\n\r\nconst getActiveTab = (value) => {\r\n\r\n  return userInfoTabs.find(\r\n    (tab) =>\r\n      addSpaces(value, \"-\").includes(tab.label.toLocaleLowerCase()) === true\r\n  ).label;\r\n};\r\n \r\nconst UserInfoPageLayout = ({ childWidth, children, paddingTop }) => {\r\n  const location = useLocation();\r\n \r\n  const activeTab = getActiveTab(location.pathname);\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"fae--user-info-page-layout-main-container\">\r\n        <FAEUserInfoTabs\r\n          tabs={userInfoTabs}\r\n          activeTab={activeTab}\r\n          className=\"side-tabs-user-info\"\r\n        />\r\n        <div\r\n          className={`fae--user-info-page-layout-pages-data dpb ${\r\n            paddingTop ?? \"\"\r\n          }`}\r\n        >\r\n          <FAEContainer className=\"fae-page-classname\">\r\n            <div style={{ width: childWidth ?? \"100%\" }}> {children}</div>\r\n          </FAEContainer>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserInfoPageLayout;\r\n","import { fetchAction } from \"../utils\";\r\n\r\nconst APP_BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst PAYMENT_JDS = process.env.REACT_APP_PAYMENT_JDS\r\nexport const getAvaliableBookingSlots = ({\r\n  selectedDate, \r\n  serviceId, \r\n  bookingDuration,\r\n  providerId, \r\n}) => {\r\n  return fetchAction({\r\n    type: \"GET_BOOKING_SLOTS_INHOUSE\",\r\n    endpoint: `${PAYMENT_JDS}/TimeSlots/GetTimeSlots`,\r\n    payload: JSON.stringify({ \r\n         bookingDate :selectedDate,\r\n         serviceId :serviceId,\r\n         providersId :providerId,\r\n         duration :bookingDuration  \r\n    }),\r\n    verb: \"POST\",\r\n  });\r\n};\r\n\r\nexport const saveBookingDateAndTime = ({\r\n  selectedDate,\r\n  selectedTime,\r\n  bookingId,\r\n  cartId,\r\n  notes,\r\n  bookingStartTime,\r\n  bookingEndTime,\r\n  addressId\r\n}) => {\r\n  return fetchAction({\r\n    type: \"SAVE_DATE_AND_TIME\",\r\n    verb: \"POST\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/TempBooking/SaveTempBooking`,\r\n    payload: JSON.stringify({\r\n      bookingDate: selectedDate,\r\n      bookingTime: selectedTime,\r\n      tempBookingId: bookingId,\r\n      cartId: cartId,\r\n      customerNotes: notes,\r\n    }),\r\n  });\r\n}; \r\n\r\n\r\nexport const saveBookingDateAndTimeNextTime = ({\r\n  selectedDate, \r\n  cartId, \r\n  bookingStartTime,\r\n  bookingEndTime,\r\n  addressId \r\n}) => { \r\n\r\n  return fetchAction({\r\n    type: \"SAVE_DATE_AND_TIME\",\r\n    verb: \"PUT\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/TempBooking/BookingDateTime`,\r\n    payload: JSON.stringify({ \r\n        cartId: cartId,\r\n        bookingDate: selectedDate,\r\n        bookingStartTime: bookingStartTime,\r\n        bookingEndTime: bookingEndTime,\r\n        addressId:addressId\r\n    }),\r\n  });\r\n}; \r\nexport const makeDateTimeNextPageFalse = () => {\r\n  return {\r\n    type: \"MAKE_DATE_TIME_NEXT_PAGE_FALSE\",\r\n  };\r\n};\r\n","import moment from \"moment\";\r\nimport { fetchAction } from \"../utils\";\r\n\r\nconst APP_BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst APP_BASE_URL_JDS = process.env.REACT_APP_PAYMENT_JDS;\r\n\r\nexport const getBookingSlots = ({\r\n  selectedDate, \r\n  serviceId,\r\n  latitude,\r\n  longitude,\r\n  countryId,\r\n  duration,\r\n  distance,\r\n  serviceVenu,\r\n   \r\n}) => {\r\n \r\n const convertTime12to24 = (time12h) => {\r\n    const [time, modifier] = time12h.split(' '); \r\n    let [hours, minutes] = time.split(':'); \r\n    if (hours === '12') {\r\n      hours = '00';\r\n    } \r\n    if (modifier === 'PM') {\r\n      hours = parseInt(hours, 10) + 12;\r\n    } \r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  var currentTime =  `${\r\n    `${new Date().getHours()}`.length === 1\r\n      ? `0${new Date().getHours()}`\r\n      : new Date().getHours()\r\n  }:${\r\n    `${new Date().getMinutes()}`.length === 1\r\n      ? `0${new Date().getMinutes()}`\r\n      : new Date().getMinutes()\r\n  }`;\r\n  \r\n  const currentDateAndTime= \r\n  `${new Date().getFullYear()}-${\r\n    `${new Date().getMonth() + 1}`.length === 1\r\n      ? `0${new Date().getMonth() + 1}`\r\n      : new Date().getMonth() + 1\r\n  }-${\r\n    `${new Date().getDate()}`.length === 1\r\n      ? `0${new Date().getDate()}`\r\n      : new Date().getDate()\r\n  }`\r\n  return fetchAction({\r\n    type: \"GET_BOOKING_SLOTS_DATA\",\r\n    endpoint: `${APP_BASE_URL_JDS}/Clinic/CreateTimeSlots`,\r\n\r\n    payload: JSON.stringify({\r\n          bookingDate: selectedDate,\r\n          latitude: latitude,\r\n          longitude: longitude,\r\n          distance: distance,\r\n          countryId: countryId,\r\n          serviceId: serviceId,\r\n          duration: duration,\r\n          serviceVenu: serviceVenu \r\n    }),\r\n    verb: \"POST\",\r\n  });\r\n};\r\n\r\n \r\n\r\nexport const makeDateTimeNextPageFalse = () => {\r\n  return {\r\n    type: \"MAKE_DATE_TIME_NEXT_PAGE_FALSE\",\r\n  };\r\n};\r\n\r\n// alternate action of get slot \r\nexport const alternateGetBookingSlots = ({\r\n  selectedDate,\r\n  providerId,\r\n  isInClinic,\r\n  duration,\r\n  cartId,\r\n  serviceId,\r\n  tempbookingid, \r\n  isBusiness,\r\n  businessId,\r\n  serviceVenu\r\n}) => {\r\n    \r\n  return fetchAction({\r\n    type: \"GET_ALTERNATE_BOOKING_SLOTS_DATA\",\r\n    endpoint: `${APP_BASE_URL_JDS}/Clinic/CreateTimeSlotsForBusiness`,\r\n    payload:  JSON.stringify({ \r\n      businessId: businessId,\r\n      bookingDate: selectedDate,\r\n      serviceId: serviceId,\r\n      duration: duration,\r\n      serviceVenu:serviceVenu, \r\n        }), \r\n    verb: \"POST\",\r\n  });\r\n};\r\n\r\n\r\n\r\nexport const SaveAlternateTempBooking = ({ \r\n tempBookingId,\r\n addressId ,\r\n cartId ,\r\n bookingDate,\r\n bookingTime,\r\n customerNotes\r\n}) => { \r\n  return fetchAction({\r\n    type: \"SAVE_ALTERNET_BOOKING\",\r\n    verb: \"POST\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/TempBooking/SaveTempBooking`,\r\n    payload: JSON.stringify({\r\n        tempBookingId: tempBookingId,\r\n        addressId: addressId,\r\n        cartId:cartId,\r\n        bookingDate: bookingDate,\r\n        bookingTime:bookingTime,\r\n        customerNotes:customerNotes\r\n    }),\r\n  });\r\n};\r\n\r\n","import { fetchAction } from \"../utils\";\r\n\r\nconst APP_BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst APP_BASE_URL_CRM = process.env.REACT_APP_BASE_URL_2\r\nexport const getEditBookingSlots = ({\r\n  selectedDate,\r\n  providerId,\r\n  isInClinic,\r\n  duration,\r\n  cartId,\r\n  serviceId,\r\n  tempbookingid, \r\n  isBusiness,\r\n  businessId\r\n}) => { \r\n\r\n\r\n  return fetchAction({\r\n    type: \"GET_EDIT_BOOKING_SLOTS_DATA\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/Providers/CheckExpertAvailableSlots`,\r\n    payload:  JSON.stringify({\r\n          bookingDate: selectedDate,\r\n          bookingDuration:duration,\r\n          currentTime: `${new Date().getFullYear()}-${\r\n              new Date().getMonth() + 1\r\n            }-${new Date().getDate()} ${new Date().getHours()}:${new Date().getMinutes()}:${new Date().getSeconds()}`,\r\n          genderPreference:\"both\",  \r\n          isBusiness:false,\r\n          isInClinic: isInClinic,\r\n          providerId: providerId,\r\n          serviceId: serviceId,\r\n          tempBookingId:tempbookingid,\r\n          cartId:cartId\r\n        }),\r\n       \r\n    verb: \"POST\",\r\n  });\r\n};\r\n\r\nexport const saveEditedBookingDateTime = ({\r\n  selectedDate,\r\n  selectedTime,\r\n  bookingId,\r\n  cartId,\r\n  userId,\r\n  providerId,\r\n  customerId,\r\n  endTime,\r\n  startTime,\r\n  sessionId,\r\n  isSessionBookingAPI,\r\n  latitude,\r\n  longitude,\r\n   duration,\r\n   serviceId,\r\n  serviceVenu,\r\n}) => {\r\n  return fetchAction({\r\n    type: \"SAVE_EDITED_DATE_AND_TIME\",\r\n    verb: \"POST\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    // endpoint: isSessionBookingAPI? `${APP_BASE_URL}/Booking/SessionBooking`: `${APP_BASE_URL}/Booking/UpdateBooking` ,\r\n    endpoint: `${APP_BASE_URL_CRM}/Booking/UpdateBookingJds`,\r\n    payload: \r\n    JSON.stringify({\r\n         bookingId : bookingId,\r\n         sessionId : sessionId,\r\n         customerId : customerId,\r\n         providerIds :  `${providerId}`,\r\n         bookingDate : selectedDate,\r\n         startTime : startTime,\r\n         endTime : endTime,\r\n         distance : 20,\r\n         latitude : `${latitude}`,\r\n         longitude : `${longitude}` ,\r\n         duration:duration,\r\n         serviceId:serviceId,\r\n         serviceVenu:serviceVenu,\r\n         \r\n    }), \r\n  //  JSON.stringify({\r\n  //   providerId:providerId,\r\n  //   bookingDate:selectedDate,\r\n  //   bookingId:bookingId,\r\n  //   customerId:customerId,\r\n  //   endTime:endTime,\r\n  //   startTime:startTime, \r\n  //   sessionId:sessionId, \r\n  // })\r\n});\r\n};\r\n\r\nexport const makeBookingEditedToDefault = () => {\r\n  return {\r\n    type: \"MAKE_EDITED_DATE_TIME_NEXT_PAGE_FALSE\",\r\n  };\r\n};\r\n","//libs\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FAEDateTimeSelection,\r\n  FAEButton,\r\n  FAETitle,\r\n} from \"@findanexpert-fae/components\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\n\r\n//src\r\nimport {\r\n  getEditBookingSlots,\r\n  makeBookingEditedToDefault,\r\n  saveEditedBookingDateTime,\r\n} from \"../../redux/actions/bookingEditPageActions\";\r\nimport { addSpaces, getCookies, getFileSrcFromPublicFolder, todayDate } from \"../../utils\";\r\nimport { faeBookingTimeSlotsParser } from \"../../parsers\";\r\nimport history from \"../../history\";\r\nimport UserInfoPageLayout from \"../UserInfoPageLayout\";\r\n\r\n//scss\r\nimport \"./BookingEditPage.scss\";\r\nimport { alternateGetBookingSlots, getBookingSlots } from \"../../redux/actions/dateTimeSelectionForClinicsActions\";\r\nimport { getAvaliableBookingSlots } from \"../../redux/actions/dateTimeSelectionPageActions\";\r\n\r\nconst loaderImage = getFileSrcFromPublicFolder(\"loader.GIF\");\r\n\r\nconst BookingEditPage = ({\r\n  loading,\r\n  error,\r\n  timeSlots = [],\r\n  getEditBookingSlots,\r\n  saveEditedBookingDateTime,\r\n  makeBookingEditedToDefault,\r\n  bookingEdited,\r\n  getBookingSlots,\r\n  getAvaliableBookingSlots,\r\n  alternateGetBookingSlots,\r\n  alternatetimeSlots\r\n}) => {\r\n  document.title = `Chelsford | Edit Booking`;\r\n  const userId = getCookies(\"userId\");\r\n  const { service } = useParams();\r\n  const serviceName = addSpaces(service, \"-\");\r\n  const location = useLocation();\r\n  const { state } = location;\r\n  const {\r\n    serviceId,\r\n    bookingId,\r\n    isInHouse ,\r\n    isInClinic ,\r\n    cartId,\r\n    providerId,\r\n    bookingDuration,\r\n    serviceTypeId,\r\n    tempBookingId,\r\n    isOnline, \r\n    addressId, \r\n    sessionId,\r\n    latitude,\r\n    longitude,\r\n    businessId, \r\n  } = state;  \r\n  const [selectedDate, setSelectedDate] = useState(todayDate);\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSelectedTime(\"\");\r\n    if (selectedDate !== \"\") {  \r\n      alternateGetBookingSlots({\r\n        businessId: businessId,\r\n        selectedDate,\r\n        serviceId: state.serviceTypeId,\r\n        duration: bookingDuration ,\r\n        serviceVenu: isInClinic? 2:1,\r\n     }) \r\n    }\r\n  }, [\r\n    bookingDuration,\r\n    getEditBookingSlots,\r\n    isInClinic,\r\n    isInHouse,\r\n    selectedDate,\r\n    serviceId,\r\n    serviceTypeId,\r\n    tempBookingId,\r\n  ]);\r\n  const renameSLotsKeys= alternatetimeSlots.map((obj)=>{\r\n    obj['availablefrom'] = obj['timeStart'];\r\n    obj['availableto'] = obj['timeEnd'];\r\n   return obj\r\n  });\r\n  useEffect(() => {\r\n    if (bookingEdited) {\r\n      makeBookingEditedToDefault();\r\n      history.push({\r\n        pathname: `/your-bookings/${service}/details`,\r\n        state: { ...state },\r\n      });\r\n    }\r\n  }, [bookingEdited, bookingId, makeBookingEditedToDefault, service, state]); \r\n\r\n  const startEndTime= renameSLotsKeys.filter((eachSlot)=>eachSlot.availablefrom==selectedTime)\r\n  const startTime= startEndTime[0]?.availablefrom;\r\n  const endTime= startEndTime[0]?.availableto\r\n\r\n  const handleSaveBookingDateAndTime = (e) => {\r\n    e.preventDefault(); \r\n    saveEditedBookingDateTime({\r\n      bookingId:bookingId,\r\n      providerId: providerId, \r\n      selectedDate,\r\n      selectedTime, \r\n      customerId:!isNaN(userId)?JSON.parse(userId):userId, \r\n      endTime:endTime,\r\n      startTime:startTime,\r\n      sessionId:sessionId,\r\n      latitude:latitude,\r\n      longitude:longitude,\r\n\r\n      duration:bookingDuration,\r\n      serviceId:serviceId,\r\n      serviceVenu:2,\r\n    })\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UserInfoPageLayout>\r\n        {\" \"}\r\n        <div className=\"fae--date-time-selection-main-container dpt dpb\">\r\n          <FAETitle\r\n            label={serviceName}\r\n            logo={getFileSrcFromPublicFolder(\"title_logo.svg\")}\r\n          />\r\n          <FAEDateTimeSelection\r\n            className=\"fae-date-time-selection-container-width\"\r\n            loaderForTimeSlots={loading}\r\n            loaderPropsForTimeSlots={{\r\n              loaderImage,\r\n              height: \"200px\",\r\n              type: \"video\",\r\n            }}\r\n            getSelectedDate={setSelectedDate}\r\n            getSelectedTime={setSelectedTime}\r\n            slots={faeBookingTimeSlotsParser(renameSLotsKeys)}\r\n          />\r\n          {selectedTime !== \"\" && (\r\n            <div\r\n              style={{ display: \"flex\", justifyContent: \"center\" }}\r\n              className=\"dpb\"\r\n            >\r\n              <FAEButton\r\n                className=\"fae--date-time-selection-button\"\r\n                onClick={handleSaveBookingDateAndTime}\r\n              >\r\n                Update\r\n              </FAEButton>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </UserInfoPageLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  bookingEditPageReducer: { error,  timeSlots, bookingEdited },\r\n  dateTimeSelectionForClinicsReducer:{alternatetimeSlots, loading}\r\n}) => ({\r\n  error,\r\n  loading,\r\n  timeSlots,\r\n  bookingEdited,\r\n  alternatetimeSlots\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getBookingSlots,\r\n      getAvaliableBookingSlots,\r\n      getEditBookingSlots,\r\n      saveEditedBookingDateTime,\r\n      makeBookingEditedToDefault,\r\n      alternateGetBookingSlots\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingEditPage);\r\n"],"sourceRoot":""}