{"version":3,"sources":["redux/actions/addressSelectionPageActions.js","redux/actions/dateTimeSelectionPageActions.js","redux/actions/sessionBookingsPageActions.js","../node_modules/@material-ui/icons/Clear.js","Pages/ServiceAttributesPage/ServiceAttributesPage.js"],"names":["APP_BASE_URL","process","REACT_APP_BASE_URL","APP_BASE_URL_JDS","REACT_APP_PAYMENT_JDS","getAddresses","_ref","isInClinic","isInHouse","serviceId","userId","selectedDate","selectedTime","radius","addressIdForClinics","fetchAction","type","verb","headers","contentType","endpoint","concat","getAddressesBStatus","_ref2","latitude","longitude","userCountryId","serviceVenu","distance","startTime","endTime","payload","JSON","stringify","bookDate","timeStart","timeEnd","countryId","getUserHomeAddresses","saveAddress","_ref3","addressId","location","cartId","trainingId","voucherId","serviceID","TrainingDetailId","makeNextPageFalse","CheckServiceAvailability","_ref4","PAYMENT_JDS","getAvaliableBookingSlots","bookingDuration","providerId","bookingDate","providersId","duration","saveBookingDateAndTime","bookingId","notes","bookingStartTime","bookingEndTime","bookingTime","tempBookingId","customerNotes","saveBookingDateAndTimeNextTime","makeDateTimeNextPageFalse","getSessionBookings","SaveSessionBooking","numberOfSessions","DeleteSessionBooking","BookingId","SessionId","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","loaderImage","getFileSrcFromPublicFolder","placeholder","imageUploadIcon","videoUploadIcon","connect","_ref7","_ref7$serviceAttribut","serviceAttributesPageReducer","error","loading","serviceAttributes","nextPageAttributes","videoUploadedResponse","uploadedImages","uploadedVideos","isDeletedResponse","_ref7$addressSelectio","addressSelectionPageReducer","checkServiceavailabiltiyData","nextPageDateTimeSelection","dateTimeSelectionPageReducer","defaultReducer","dispatch","bindActionCreators","getServiceAttributesData","makeServiceAttributesNextPageFalse","saveServiceAttributes","uploadBookingVideo","makeVideoUploadedResponseEmpty","getBookingVideoAndImages","deleteImageOrVideo","makeIsDeletedResponseEmpty","_ref$serviceAttribute","_ref$checkServiceavai","getCookies","service","useParams","serviceName","addSpaces","document","title","state","useLocation","isOnline","hasProducts","selectedSessions","_useState","useState","_useState2","_slicedToArray","errorFileds","setErrorFields","_useState3","_useState4","fieldAnswers","setFieldAnswers","_useState5","_useState6","imageUploading","setImageUploading","_useState7","_useState8","textNotes","setTextNotes","_useState9","_useState10","videoUploading","setVideoUploading","_useState11","_useState12","deleteMessage","setDeleteMessage","_useState13","_useState14","deleteFileParams","setDeleteFileParams","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","objectIsEmpty","message","code","alert","_callee2","_context2","t0","sent","t1","t2","history","push","pathname","_objectSpread","pathName","bookingName","availableProviders","t3","localStorage","setItem","handleChangefieldValue","id","getUniqueData","_toConsumableArray","handleCheckBoxError","isRequired","delteFile","e","isVideo","filetype","_jsxs","_Fragment","children","_jsx","className","FAELoading","height","FAETitle","label","logo","onSubmit","preventDefault","some","field","Children","toArray","map","attribute","attributeTypeName","attributeKey","attributeID","_attribute$options","options","fieldType","toLowerCase","FAESelect","primary","shadowBoxProps","values","faeFormDataParser","required","getSelectedValue","FAETextField","getValue","FAECheckBoxGroup","length","errorMessage","getSelectedValues","toString","FAERadioGroup","FAEShadowBox","padding","htmlFor","FAEText","src","alt","width","accept","name","onChange","target","files","style","display","flexDirection","gap","subHeading","_ref5","filePath","href","rel","onClick","ClearIcon","color","_ref6","FAEImage","FAEButton","FAEDialogueBox","open","content","buttons","stopPropagation","deleteVideoHandler","deleteImageHandler"],"mappings":"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","file":"static/js/33.15a81224.chunk.js","sourcesContent":["import { fetchAction } from \"../utils\";\r\n\r\nconst APP_BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst APP_BASE_URL_JDS = process.env.REACT_APP_PAYMENT_JDS;\r\n\r\nexport const getAddresses = ({\r\n  isInClinic,\r\n  isInHouse,\r\n  serviceId,\r\n  userId,\r\n  selectedDate,\r\n  selectedTime,\r\n  radius,\r\n  addressIdForClinics,\r\n}) => {\r\n  return  fetchAction({\r\n        type: \"GET_ADDRESSES_LIST\",\r\n        verb: \"GET\",\r\n        headers: { contentType: \"includeBearer\"},\r\n        endpoint: `${APP_BASE_URL}/Addresses/GetCustomerAddresses/${userId}/true`,\r\n      });\r\n};\r\nexport const getAddressesBStatus = ({ \r\n  serviceId, \r\n  selectedDate,\r\n  selectedTime, \r\n  latitude,\r\n  longitude,\r\n  userCountryId,\r\n  serviceVenu,\r\n  distance,\r\n  startTime, \r\n  endTime,\r\n}) => {\r\n  return   fetchAction({\r\n        type: \"GET_ADDRESSES_FOR_BOOKING\",\r\n        verb: \"POST\",\r\n        endpoint: `${APP_BASE_URL_JDS}/Clinic/GetProvidersInSpecificSlot`,\r\n        payload: JSON.stringify({\r\n\r\n          bookDate: selectedDate,\r\n          timeStart: startTime,\r\n          timeEnd: endTime,\r\n          latitude: latitude,\r\n          longitude: longitude,\r\n          countryId: userCountryId,\r\n          serviceVenu: serviceVenu,\r\n          serviceId: serviceId,\r\n          distance:distance \r\n\r\n          // serviceID: serviceId,\r\n          // userId: parseInt(userId),\r\n          // inhouse: inhouse,\r\n          // inclinic: isInClinic,\r\n          // genderPreference: \"Both\",\r\n          // selectedDate: selectedDate,\r\n          // selectedTime: selectedTime,\r\n          // radius,\r\n          // AddressId: addressIdForClinics,\r\n          // cartId:cartId,\r\n          \r\n        }),\r\n      })\r\n     \r\n};\r\nexport const getUserHomeAddresses = (userId) => {\r\n  return fetchAction({\r\n    type: \"GET_USER_HOME_ADDRESSES\",\r\n    verb: \"GET\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/Addresses/GetCustomerAddresses/${userId}/true`,\r\n  });\r\n};\r\n\r\nexport const saveAddress = ({\r\n  addressId,\r\n  location,\r\n  cartId,\r\n  serviceId,\r\n  userId,\r\n  trainingId,\r\n  voucherId,\r\n}) => {\r\n  return fetchAction({\r\n    type: \"SAVE_ADDRESS_FOR_BOOKING\",\r\n    verb: \"POST\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/TempBooking/SaveTempBooking`,\r\n    payload: JSON.stringify({\r\n      userId: userId,\r\n      serviceID: serviceId,\r\n      addressId: addressId,\r\n      location: location,\r\n      cartId: cartId,\r\n      TrainingDetailId: trainingId,\r\n      voucherId,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const makeNextPageFalse = () => {\r\n  return {\r\n    type: \"MAKE_NEXT_PAGE_FALSE\",\r\n  };\r\n};\r\n\r\nexport const CheckServiceAvailability=({\r\n  serviceId ,\r\n  countryId ,\r\n  latitude ,\r\n  longitude ,\r\n})=>{\r\n  return fetchAction({\r\n    type: \"CHECK_SERVICES_AVAILABILITY\",\r\n    verb: \"POST\",\r\n    endpoint: `${APP_BASE_URL_JDS}/ServiceAvailability/CheckServiceAvailability`,\r\n    payload: JSON.stringify({\r\n       serviceId : serviceId,\r\n       countryId : countryId,\r\n       latitude : `${latitude}`,\r\n       longitude : `${longitude}`,\r\n       serviceVenu : 2\r\n    }),\r\n  });\r\n}","import { fetchAction } from \"../utils\";\r\n\r\nconst APP_BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst PAYMENT_JDS = process.env.REACT_APP_PAYMENT_JDS\r\nexport const getAvaliableBookingSlots = ({\r\n  selectedDate, \r\n  serviceId, \r\n  bookingDuration,\r\n  providerId, \r\n}) => {\r\n  return fetchAction({\r\n    type: \"GET_BOOKING_SLOTS_INHOUSE\",\r\n    endpoint: `${PAYMENT_JDS}/TimeSlots/GetTimeSlots`,\r\n    payload: JSON.stringify({ \r\n         bookingDate :selectedDate,\r\n         serviceId :serviceId,\r\n         providersId :providerId,\r\n         duration :bookingDuration  \r\n    }),\r\n    verb: \"POST\",\r\n  });\r\n};\r\n\r\nexport const saveBookingDateAndTime = ({\r\n  selectedDate,\r\n  selectedTime,\r\n  bookingId,\r\n  cartId,\r\n  notes,\r\n  bookingStartTime,\r\n  bookingEndTime,\r\n  addressId\r\n}) => {\r\n  return fetchAction({\r\n    type: \"SAVE_DATE_AND_TIME\",\r\n    verb: \"POST\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/TempBooking/SaveTempBooking`,\r\n    payload: JSON.stringify({\r\n      bookingDate: selectedDate,\r\n      bookingTime: selectedTime,\r\n      tempBookingId: bookingId,\r\n      cartId: cartId,\r\n      customerNotes: notes,\r\n    }),\r\n  });\r\n}; \r\n\r\n\r\nexport const saveBookingDateAndTimeNextTime = ({\r\n  selectedDate, \r\n  cartId, \r\n  bookingStartTime,\r\n  bookingEndTime,\r\n  addressId \r\n}) => { \r\n\r\n  return fetchAction({\r\n    type: \"SAVE_DATE_AND_TIME\",\r\n    verb: \"PUT\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/TempBooking/BookingDateTime`,\r\n    payload: JSON.stringify({ \r\n        cartId: cartId,\r\n        bookingDate: selectedDate,\r\n        bookingStartTime: bookingStartTime,\r\n        bookingEndTime: bookingEndTime,\r\n        addressId:addressId\r\n    }),\r\n  });\r\n}; \r\nexport const makeDateTimeNextPageFalse = () => {\r\n  return {\r\n    type: \"MAKE_DATE_TIME_NEXT_PAGE_FALSE\",\r\n  };\r\n};\r\n","import { fetchAction } from \"../utils\";\r\n\r\nconst APP_BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const getSessionBookings = (userId) => {\r\n  return fetchAction({\r\n    type: \"GET_SESSION_BOOKINGS\",\r\n    verb: \"GET\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/Booking/GetCustomerSessionBookings?UserId=${userId}&PageNumber=1&RowsOfPage=50`,\r\n    // payload: JSON.stringify({\r\n    //   userId: userId,\r\n    // }),\r\n  });\r\n};\r\n\r\n// export const getSessionBookings = (userId) => {\r\n//   return fetchAction({\r\n//     type: \"GET_SESSION_BOOKINGS\",\r\n//     verb: \"POST\",\r\n//     endpoint: `${APP_BASE_URL}/Booking`,\r\n//     payload: JSON.stringify({\r\n//       userId: userId,\r\n//     }),\r\n//   });\r\n// };\r\nexport const SaveSessionBooking = (cartId, numberOfSessions) => {\r\n  return fetchAction({\r\n    type: \"SAVE_SESSION_BOOKINGS\",\r\n    verb: \"POST\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/Booking/SaveSessions`,\r\n      payload: JSON.stringify({\r\n       cartId: cartId,\r\n       numberOfSessions:numberOfSessions\r\n    }),\r\n  });\r\n};\r\n\r\nexport const DeleteSessionBooking = (BookingId, SessionId) => {\r\n  return fetchAction({\r\n    type: \"DELETE_SESSION_BOOKING\",\r\n    verb: \"DELETE\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/Booking/DeleteSessionBooking?BookingId=${BookingId}&SessionId=${SessionId}` \r\n  });\r\n}; ","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\r\n//libs\r\nimport React, { useEffect, Children, useState } from \"react\";\r\nimport {\r\n  FAETitle,\r\n  FAESelect,\r\n  FAERadioGroup,\r\n  FAECheckBoxGroup,\r\n  FAETextField,\r\n  FAELoading,\r\n  FAEButton,\r\n  FAEShadowBox,\r\n  FAEText,\r\n  FAEImage,\r\n  FAEDialogueBox\r\n  // FAEVideo,\r\n} from \"@findanexpert-fae/components\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\n \r\n//src\r\nimport {\r\n  addSpaces,\r\n  getCookies,\r\n  getFileSrcFromPublicFolder,\r\n  getUniqueData,\r\n  objectIsEmpty,\r\n} from \"../../utils\";\r\nimport {\r\n  getServiceAttributesData,\r\n  makeServiceAttributesNextPageFalse,\r\n  saveServiceAttributes,\r\n  uploadBookingVideo,\r\n  makeVideoUploadedResponseEmpty,\r\n  getBookingVideoAndImages,\r\n  deleteImageOrVideo,\r\n  makeIsDeletedResponseEmpty,\r\n} from \"../../redux/actions/serviceAttributesPageActions\";\r\nimport { faeFormDataParser } from \"../../parsers\";\r\nimport {\r\n  makeNextPageFalse,\r\n  saveAddress,\r\n  CheckServiceAvailability\r\n} from \"../../redux/actions/addressSelectionPageActions\";\r\nimport history from \"../../history\";\r\nimport {\r\n  makeDateTimeNextPageFalse,\r\n  saveBookingDateAndTime,\r\n} from \"../../redux/actions/dateTimeSelectionPageActions\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n//scss\r\nimport \"./ServiceAttributesPage.scss\"; \r\nimport { SaveSessionBooking } from \"../../redux/actions/sessionBookingsPageActions\";\r\n\r\nconst loaderImage = getFileSrcFromPublicFolder(\"loader.GIF\");\r\nconst placeholder = getFileSrcFromPublicFolder(\"placeholder.jpg\");\r\nconst imageUploadIcon = getFileSrcFromPublicFolder(\"image_upload_icon.svg\");\r\nconst videoUploadIcon = getFileSrcFromPublicFolder(\"video_upload_icon.svg\");\r\n\r\nconst ServiceAttributesPage = ({\r\n  error,\r\n  loading,\r\n  userCountryId,\r\n  serviceAttributes = [],\r\n  getServiceAttributesData,\r\n  nextPageAttributes,\r\n  makeServiceAttributesNextPageFalse,\r\n  saveServiceAttributes,\r\n  videoUploadedResponse,\r\n  uploadBookingVideo,\r\n  bookingId,\r\n  cartId,\r\n  saveAddress,\r\n  makeVideoUploadedResponseEmpty,\r\n  makeNextPageFalse,\r\n  getBookingVideoAndImages,\r\n  uploadedImages,\r\n  uploadedVideos,\r\n  deleteImageOrVideo,\r\n  isDeletedResponse,\r\n  makeIsDeletedResponseEmpty,\r\n  SaveSessionBooking,\r\n  saveBookingDateAndTime, \r\n  CheckServiceAvailability,\r\n  checkServiceavailabiltiyData=[]\r\n}) => {\r\n  const userId = getCookies(\"userId\");\r\n  const { service } = useParams();\r\n  const serviceName = addSpaces(service, \"-\");\r\n  document.title = `Chelsford | ${serviceName} - Attributes`;\r\n  const location = useLocation();\r\n  const { state } = location;\r\n  \r\n  const {\r\n    serviceId,\r\n    isOnline,\r\n    isInHouse,\r\n    voucherId,\r\n    isInClinic,\r\n    selectedDate,\r\n    selectedTime,\r\n    hasProducts,\r\n    selectedSessions,\r\n    latitude,\r\n    longitude,\r\n  } = state;  \r\n  const [errorFileds, setErrorFields] = useState([]);\r\n  const [fieldAnswers, setFieldAnswers] = useState([]);\r\n  const [imageUploading, setImageUploading] = useState(false);\r\n  const [textNotes, setTextNotes] = useState(\"\");\r\n  const [videoUploading, setVideoUploading] = useState(false);\r\n  const [deleteMessage, setDeleteMessage] = useState(false);\r\n  const [deleteFileParams, setDeleteFileParams] = useState({});\r\n  useEffect(() => {\r\n    if (isOnline) {\r\n      saveAddress({\r\n        addressId: 0,\r\n        location: \"Online\",\r\n        serviceId,\r\n        userId,\r\n        cartId: \"\",\r\n        voucherId,\r\n      });\r\n    }\r\n  }, [isOnline, saveAddress, serviceId, userId, voucherId]);\r\n\r\n  useEffect( async() => { \r\n    await getServiceAttributesData(serviceId);\r\n    if(isInHouse) { \r\n     // ServiceAvailability  CheckServiceAvailability\r\n       await CheckServiceAvailability({\r\n        serviceId: serviceId,\r\n        countryId: userCountryId,\r\n        latitude: latitude,\r\n        longitude: longitude,\r\n      })\r\n    } \r\n    getBookingVideoAndImages(cartId ? cartId : state.cartId);\r\n    return () => makeNextPageFalse();\r\n  }, [\r\n    cartId,\r\n    getBookingVideoAndImages,\r\n    getServiceAttributesData,\r\n    makeNextPageFalse,\r\n    serviceId,\r\n    state.cartId,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!objectIsEmpty(videoUploadedResponse)) {\r\n      setVideoUploading(false);\r\n      setImageUploading(false);\r\n      const { message, code } = videoUploadedResponse;\r\n      if (code !== 0) {\r\n        alert(message);\r\n      } else {\r\n        alert(message);\r\n        getBookingVideoAndImages(cartId ? cartId : state.cartId);\r\n      }\r\n      makeVideoUploadedResponseEmpty();\r\n    }\r\n  }, [\r\n    videoUploadedResponse,\r\n    userId,\r\n    makeVideoUploadedResponseEmpty,\r\n    cartId,\r\n    state.cartId,\r\n    getBookingVideoAndImages,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!objectIsEmpty(isDeletedResponse)) {\r\n      setVideoUploading(false);\r\n      setImageUploading(false);\r\n      const { message, code } = isDeletedResponse;\r\n      if (code !== 0) {\r\n        alert(message);\r\n      } else {\r\n        alert(message);\r\n        getBookingVideoAndImages(cartId ? cartId : state.cartId);\r\n      }\r\n      makeIsDeletedResponseEmpty();\r\n    }\r\n  }, [\r\n    cartId,\r\n    getBookingVideoAndImages,\r\n    isDeletedResponse,\r\n    makeIsDeletedResponseEmpty,\r\n    state.cartId,\r\n  ]);\r\n \r\n  useEffect(async() => {\r\n   if (nextPageAttributes) {\r\n       await selectedSessions >0 && SaveSessionBooking(cartId, selectedSessions) \r\n      makeServiceAttributesNextPageFalse();  \r\n      await hasProducts &&  history.push({\r\n                pathname: `/product-list:${service}`,\r\n                state: {\r\n                  ...state,\r\n                  notes: textNotes,\r\n                  bookingId: bookingId ? bookingId : state.bookingId,\r\n                  cartId: cartId ? cartId : state.cartId,\r\n                  pathName: `/booking/${service}/date-time-selection`,\r\n                  serviceId: serviceId,\r\n                  bookingName: serviceName,\r\n                  providerId:checkServiceavailabiltiyData.availableProviders\r\n                },\r\n              }) \r\n      await  !hasProducts && history.push({\r\n            pathname: `/booking/${service}/date-time-selection`,\r\n            state: {\r\n              ...state,\r\n              notes: textNotes,\r\n              bookingId: bookingId ? bookingId : state.bookingId,\r\n              cartId: cartId ? cartId : state.cartId,\r\n              bookingName: serviceName,\r\n              providerId:checkServiceavailabiltiyData.availableProviders\r\n            },\r\n          });\r\n     }\r\n     \r\n\r\n    localStorage.setItem('cartid',state.cartId)\r\n  }, [\r\n    bookingId,\r\n    cartId,\r\n    isInClinic,\r\n    makeServiceAttributesNextPageFalse,\r\n    nextPageAttributes,\r\n    saveBookingDateAndTime,\r\n    selectedDate,\r\n    selectedTime,\r\n    service,\r\n    state,\r\n    textNotes,\r\n  ]);\r\n    \r\n\r\n  const handleChangefieldValue = (id, value) => {\r\n    setFieldAnswers(getUniqueData([{ id, value }, ...fieldAnswers], \"id\"));\r\n  };\r\n\r\n  const handleCheckBoxError = ({ isRequired, id, error }) => {\r\n    isRequired === true &&\r\n      setErrorFields(getUniqueData([{ id, error }, ...errorFileds], \"id\"));\r\n    return error;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    return errorFileds.some((field) => field.error === true)\r\n      ? alert(\"Please fill required fields\")\r\n      : saveServiceAttributes({\r\n          cartId: cartId ? cartId : state.cartId,\r\n          bookingId: bookingId ? bookingId : state.bookingId,\r\n          fieldAnswers,\r\n        });\r\n  };\r\n\r\n  const imageHandler = (e) => {\r\n    e.preventDefault();\r\n    setImageUploading(true);\r\n    if (e.target.files[0]) {\r\n      uploadBookingVideo({\r\n        cartId: cartId ? cartId : state.cartId,\r\n        userId,\r\n        src: e.target.files[0],\r\n        filetype: \"I\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const videoHandler = (e) => {\r\n    e.preventDefault();\r\n    setVideoUploading(true);\r\n    if (e.target.files[0]) {\r\n      uploadBookingVideo({\r\n        cartId: cartId ? cartId : state.cartId,\r\n        userId,\r\n        src: e.target.files[0],\r\n        filetype: \"V\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteImageHandler = (e, id) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    setImageUploading(true);\r\n    deleteImageOrVideo({ cartId: cartId ? cartId : state.cartId, id });\r\n  };\r\n\r\n  const deleteVideoHandler = (e, id) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    setVideoUploading(true);\r\n    deleteImageOrVideo({ cartId: cartId ? cartId : state.cartId, id });\r\n  };\r\n\r\n  const delteFile =(e, id, isVideo)=>{ \r\n    setDeleteFileParams({e:e, id:id, filetype:isVideo})\r\n    setDeleteMessage(true)\r\n  }\r\n  const delteFileOkay = ()=>{\r\n    const {e,id, filetype}=deleteFileParams\r\n    filetype? deleteVideoHandler(e, id): deleteImageHandler(e, id);\r\n    setDeleteMessage(false)\r\n  }\r\n  const toDisabled=()=>{\r\n    setDeleteMessage(false)\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"fae--service-attributes-page-container dpt dpb\">\r\n        <div className=\"fae--service-attributes-page-wrapper\">\r\n          {loading && (\r\n            <FAELoading type=\"svg\" loaderImage={loaderImage} height=\"300px\" />\r\n          )}\r\n          {!loading && (\r\n           <>\r\n            <FAETitle\r\n              label={serviceName}\r\n              logo={getFileSrcFromPublicFolder(\"title_logo.svg\")}\r\n            />\r\n            <form\r\n              onSubmit={handleSubmit}\r\n              className=\"fae--service-attributes-page-attributes-form\"\r\n            >\r\n              {Children.toArray(\r\n                serviceAttributes.map((attribute) => {\r\n                  const {\r\n                    attributeTypeName,\r\n                    attributeKey,\r\n                    attributeID,\r\n                    options = [],\r\n                    isRequired,\r\n                  } = attribute;\r\n                  const fieldType = attributeTypeName.toLowerCase();\r\n                  return (\r\n                    <>\r\n                      {fieldType === \"select\" && (\r\n                        <FAESelect\r\n                          label={attributeKey}\r\n                          primary\r\n                          shadowBoxProps={{ primary: true }}\r\n                          values={faeFormDataParser(options)}\r\n                          required={isRequired}\r\n                          isRequired={isRequired}\r\n                          getSelectedValue={(value) =>\r\n                            handleChangefieldValue(attributeID, value)\r\n                          }\r\n                        />\r\n                      )}\r\n                      {fieldType === \"textbox\" && (\r\n                        <FAETextField\r\n                          label={attributeKey}\r\n                          primary\r\n                          shadowBoxProps={{ primary: true }}\r\n                          placeholder={attributeKey}\r\n                          required={isRequired}\r\n                          isRequired={isRequired}\r\n                          getValue={(value) =>\r\n                            handleChangefieldValue(attributeID, value)\r\n                          }\r\n                        />\r\n                      )}\r\n                      {fieldType === \"checkbox\" && (\r\n                        <FAECheckBoxGroup\r\n                          label={attributeKey}\r\n                          values={faeFormDataParser(options)}\r\n                          primary\r\n                          shadowBoxProps={{ primary: true }}\r\n                          error={(values) =>\r\n                            isRequired && values.length < 1\r\n                              ? handleCheckBoxError({\r\n                                  isRequired,\r\n                                  id: attributeID,\r\n                                  error: true,\r\n                                })\r\n                              : handleCheckBoxError({\r\n                                  isRequired,\r\n                                  id: attributeID,\r\n                                  error: false,\r\n                                })\r\n                          }\r\n                          errorMessage=\"Select at least 1\"\r\n                          isRequired={isRequired}\r\n                          getSelectedValues={(values) =>\r\n                            handleChangefieldValue(\r\n                              attributeID,\r\n                              values.toString()\r\n                            )\r\n                          }\r\n                        />\r\n                      )}\r\n                      {fieldType === \"radiobutton\" && (\r\n                        <FAERadioGroup\r\n                          label={attributeKey}\r\n                          values={faeFormDataParser(options)}\r\n                          primary\r\n                          shadowBoxProps={{ primary: true }}\r\n                          isRequired={isRequired}\r\n                          required={isRequired}\r\n                          getSelectedValue={(value) =>\r\n                            handleChangefieldValue(attributeID, value)\r\n                          }\r\n                        />\r\n                      )}\r\n                    </>\r\n                  );\r\n                })\r\n              )}\r\n              <FAEShadowBox>\r\n                <FAETextField\r\n                  label=\"Add Text Notes\"\r\n                  placeholder=\"Notes...\"\r\n                  primary\r\n                  shadowBoxProps={{\r\n                    primary: true,\r\n                  }}\r\n                  value={textNotes}\r\n                  getValue={(value) => setTextNotes(value)}\r\n                />\r\n              </FAEShadowBox>\r\n              <FAEShadowBox\r\n                className=\"fae--service-attributes-page-notes-wrapper\"\r\n                padding\r\n                primary\r\n              >\r\n                {/* <div style={{ textAlign: \"center\" }}>\r\n                  <FAEText subHeading>Notes</FAEText>\r\n                  <FAEText>\r\n                    Please Enter Text Notes or Image or Video Notes\r\n                  </FAEText>\r\n                </div> */}\r\n                <div className=\"fae--service-attributes-page-image-or-video-notes-wrapper\">\r\n                  <div className=\"fae--service-attributes-page-add-wrapper\">\r\n                    <label htmlFor=\"video-upload\" className=\"pointer\">\r\n                      <FAEText className=\"fae--service-attributes-uploading-image-or-video-button\">\r\n                        <img\r\n                          src={videoUploadIcon}\r\n                          alt=\"video_upload_icon\"\r\n                          width=\"40px\"\r\n                          height=\"40px\"\r\n                        />\r\n                        Add Video Notes\r\n                      </FAEText>\r\n                    </label>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\"video/*\"\r\n                      name=\"image-upload\"\r\n                      id=\"video-upload\"\r\n                      onChange={videoHandler}\r\n                      style={{ display: \"none\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"fae--service-attributes-page-add-wrapper\">\r\n                    <label htmlFor=\"image-upload\" className=\"pointer\">\r\n                      <FAEText className=\"fae--service-attributes-uploading-image-or-video-button\">\r\n                        <img\r\n                          src={imageUploadIcon}\r\n                          alt=\"image_upload_icon\"\r\n                          width=\"40px\"\r\n                          height=\"40px\"\r\n                        />\r\n                        Add Image Notes\r\n                      </FAEText>\r\n                    </label>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      name=\"image-upload\"\r\n                      id=\"image-upload\"\r\n                      onChange={imageHandler}\r\n                      style={{ display: \"none\" }}\r\n                      // multiple\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </FAEShadowBox>\r\n              <FAEShadowBox\r\n                padding\r\n                primary\r\n                style={{ flexDirection: \"column\", gap: \"10px\" }}\r\n              >\r\n                <div className=\"fae--service-attributes-uploaded-images-or-videos-wrapper line-break\">\r\n                  <FAEText subHeading>Videos</FAEText>\r\n                  <div className=\"fae--services-attributes-page-already-uploaded-images-and-videos\">\r\n                    {!videoUploading ? (\r\n                      uploadedVideos.map(({ filePath, id }) => (\r\n                        <div className=\"fae--service-attributes-custom-image-or-video-wrapper-main-container\">\r\n                          <a\r\n                            className=\"fae--service-attributes-custom-image-or-video-wrapper\"\r\n                            target=\"_blank\"\r\n                            href={filePath}\r\n                            rel=\"noreferrer\"\r\n                          >\r\n                            <div className=\"fae--service-card-image-container\">\r\n                              <video\r\n                                src={filePath}\r\n                                alt={filePath}\r\n                                width=\"100%\"\r\n                                height=\"100%\"\r\n                                type=\"video/mp4\"\r\n                                key={id}\r\n                              />\r\n                            </div>\r\n                          </a>\r\n                          <div\r\n                            onClick={(e) => {\r\n                              delteFile(e, id, true);\r\n                            }}\r\n                            className=\"fae--addresses-delete-icon-wrapper pointer\"  >\r\n                           <ClearIcon style={{color: \"#ffebee\"}}/> \r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <FAELoading\r\n                        loaderImage={loaderImage}\r\n                        height=\"200px\"\r\n                        type=\"svg\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"fae--service-attributes-uploaded-images-or-videos-wrapper\">\r\n                  <FAEText subHeading>Images</FAEText>\r\n                  <div className=\"fae--services-attributes-page-already-uploaded-images-and-videos\">\r\n                    {!imageUploading ? (\r\n                      uploadedImages.map(({ id, filePath }) => (\r\n                        <div className=\"fae--service-attributes-custom-image-or-video-wrapper-main-container\">\r\n                          <a\r\n                            className=\"fae--service-attributes-custom-image-or-video-wrapper\"\r\n                            target=\"_blank\"\r\n                            href={filePath}\r\n                            rel=\"noreferrer\"\r\n                          >\r\n                            <FAEImage\r\n                              placeholder={placeholder}\r\n                              src={filePath}\r\n                              alt={filePath}\r\n                              key={id}\r\n                              width=\"100%\"\r\n                              height=\"100%\"\r\n                            />\r\n                          </a>\r\n                          <div\r\n                            onClick={(e) => {\r\n                              delteFile(e, id, false);\r\n                            }}\r\n                            className=\"fae--addresses-delete-icon-wrapper pointer\"\r\n                          >\r\n                             <ClearIcon style={{color: \"#ffebee\"}}/> \r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <FAELoading\r\n                        loaderImage={loaderImage}\r\n                        height=\"200px\"\r\n                        type=\"svg\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </FAEShadowBox>\r\n              <FAEButton\r\n                type=\"submit\"\r\n                className=\"fae--service-attributes-button\"\r\n              >\r\n                Next\r\n              </FAEButton>\r\n            </form>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    {deleteMessage &&  \r\n     <FAEDialogueBox\r\n        title=\"\"\r\n        open={deleteMessage}\r\n        content={\"Are you sure you want to delete this file.\"}\r\n        buttons={[\r\n          {\r\n            label: \"Yes\",\r\n            onClick: delteFileOkay,\r\n          },\r\n          {\r\n            label: \"Cancel\",\r\n            onClick:()=>setDeleteMessage(false)\r\n          },\r\n        ]}\r\n      >  \r\n     </FAEDialogueBox> \r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  serviceAttributesPageReducer: {\r\n    error,\r\n    loading,\r\n    serviceAttributes,\r\n    nextPageAttributes,\r\n    videoUploadedResponse,\r\n    uploadedImages,\r\n    uploadedVideos,\r\n    isDeletedResponse,\r\n  },\r\n  addressSelectionPageReducer: { bookingId, cartId, checkServiceavailabiltiyData},\r\n  dateTimeSelectionPageReducer: { nextPageDateTimeSelection },\r\n  defaultReducer:{userCountryId}\r\n}) => ({\r\n  error,\r\n  loading,\r\n  userCountryId,\r\n  serviceAttributes,\r\n  nextPageAttributes,\r\n  videoUploadedResponse,\r\n  bookingId,\r\n  cartId,\r\n  uploadedImages,\r\n  uploadedVideos,\r\n  isDeletedResponse,\r\n  nextPageDateTimeSelection,\r\n  checkServiceavailabiltiyData\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getServiceAttributesData,\r\n      makeServiceAttributesNextPageFalse,\r\n      saveServiceAttributes,\r\n      uploadBookingVideo,\r\n      saveAddress,\r\n      makeVideoUploadedResponseEmpty,\r\n      makeNextPageFalse,\r\n      getBookingVideoAndImages,\r\n      deleteImageOrVideo,\r\n      makeIsDeletedResponseEmpty,\r\n      makeDateTimeNextPageFalse,\r\n      saveBookingDateAndTime,\r\n      SaveSessionBooking,\r\n      CheckServiceAvailability\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ServiceAttributesPage);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// //libs\r\n// import React, { useEffect, Children, useState } from \"react\";\r\n// import {\r\n//   FAETitle,\r\n//   FAESelect,\r\n//   FAERadioGroup,\r\n//   FAECheckBoxGroup,\r\n//   FAETextField,\r\n//   FAELoading,\r\n//   FAEButton,\r\n//   FAEShadowBox,\r\n//   FAEText,\r\n//   FAEImage,\r\n//   // FAEVideo,\r\n// } from \"@findanexpert-fae/components\";\r\n// import { bindActionCreators } from \"redux\";\r\n// import { connect } from \"react-redux\";\r\n// import { useLocation, useParams } from \"react-router-dom\";\r\n\r\n// //src\r\n// import {\r\n//   addSpaces,\r\n//   getCookies,\r\n//   getFileSrcFromPublicFolder,\r\n//   getUniqueData,\r\n//   objectIsEmpty,\r\n// } from \"../../utils\";\r\n// import {\r\n//   getServiceAttributesData,\r\n//   makeServiceAttributesNextPageFalse,\r\n//   saveServiceAttributes,\r\n//   uploadBookingVideo,\r\n//   makeVideoUploadedResponseEmpty,\r\n//   getBookingVideoAndImages,\r\n//   deleteImageOrVideo,\r\n//   makeIsDeletedResponseEmpty,\r\n// } from \"../../redux/actions/serviceAttributesPageActions\";\r\n// import { faeFormDataParser } from \"../../parsers\";\r\n// import {\r\n//   makeNextPageFalse,\r\n//   saveAddress,\r\n// } from \"../../redux/actions/addressSelectionPageActions\";\r\n// import history from \"../../history\";\r\n// import {\r\n//   makeDateTimeNextPageFalse,\r\n//   saveBookingDateAndTime,\r\n// } from \"../../redux/actions/dateTimeSelectionPageActions\";\r\n\r\n// //scss\r\n// import \"./ServiceAttributesPage.scss\";\r\n\r\n// const loaderImage = getFileSrcFromPublicFolder(\"loader.GIF\");\r\n// const placeholder = getFileSrcFromPublicFolder(\"placeholder.jpg\");\r\n// const imageUploadIcon = getFileSrcFromPublicFolder(\"image_upload_icon.svg\");\r\n// const videoUploadIcon = getFileSrcFromPublicFolder(\"video_upload_icon.svg\");\r\n\r\n// const ServiceAttributesPage = ({\r\n//   error,\r\n//   loading,\r\n//   serviceAttributes = [],\r\n//   getServiceAttributesData,\r\n//   nextPageAttributes,\r\n//   makeServiceAttributesNextPageFalse,\r\n//   saveServiceAttributes,\r\n//   videoUploadedResponse,\r\n//   uploadBookingVideo,\r\n//   bookingId,\r\n//   cartId,\r\n//   saveAddress,\r\n//   makeVideoUploadedResponseEmpty,\r\n//   makeNextPageFalse,\r\n//   getBookingVideoAndImages,\r\n//   uploadedImages,\r\n//   uploadedVideos,\r\n//   deleteImageOrVideo,\r\n//   isDeletedResponse,\r\n//   makeIsDeletedResponseEmpty,\r\n//   nextPageDateTimeSelection,\r\n//   saveBookingDateAndTime,\r\n//   makeDateTimeNextPageFalse,\r\n// }) => {\r\n//   const userId = getCookies(\"userId\");\r\n//   const { service } = useParams();\r\n//   const serviceName = addSpaces(service, \"-\");\r\n//   document.title = `Chelsford | ${serviceName} - Attributes`;\r\n//   const location = useLocation();\r\n//   const { state } = location;\r\n//   const {\r\n//     serviceId,\r\n//     isOnline,\r\n//     voucherId,\r\n//     isInClinic,\r\n//     selectedDate,\r\n//     selectedTime,\r\n//   } = state;\r\n//   const [errorFileds, setErrorFields] = useState([]);\r\n//   const [fieldAnswers, setFieldAnswers] = useState([]);\r\n//   const [imageUploading, setImageUploading] = useState(false);\r\n//   const [textNotes, setTextNotes] = useState(\"\");\r\n//   const [videoUploading, setVideoUploading] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     if (isOnline) {\r\n//       saveAddress({\r\n//         addressId: 0,\r\n//         location: \"Online\",\r\n//         serviceId,\r\n//         userId,\r\n//         cartId: \"\",\r\n//         voucherId,\r\n//       });\r\n//     }\r\n//   }, [isOnline, saveAddress, serviceId, userId, voucherId]);\r\n\r\n//   useEffect(() => {\r\n//     getServiceAttributesData(serviceId);\r\n//     getBookingVideoAndImages(cartId ? cartId : state.cartId);\r\n//     return () => makeNextPageFalse();\r\n//   }, [\r\n//     cartId,\r\n//     getBookingVideoAndImages,\r\n//     getServiceAttributesData,\r\n//     makeNextPageFalse,\r\n//     serviceId,\r\n//     state.cartId,\r\n//   ]);\r\n\r\n//   useEffect(() => {\r\n//     if (!objectIsEmpty(videoUploadedResponse)) {\r\n//       setVideoUploading(false);\r\n//       setImageUploading(false);\r\n//       const { message, code } = videoUploadedResponse;\r\n//       if (code !== 0) {\r\n//         alert(message);\r\n//       } else {\r\n//         alert(message);\r\n//         getBookingVideoAndImages(cartId ? cartId : state.cartId);\r\n//       }\r\n//       makeVideoUploadedResponseEmpty();\r\n//     }\r\n//   }, [\r\n//       videoUploadedResponse,\r\n//       userId,\r\n//       makeVideoUploadedResponseEmpty,\r\n//       cartId,\r\n//       state.cartId,\r\n//       getBookingVideoAndImages,\r\n//   ]);\r\n\r\n//   useEffect(() => {\r\n//     if (!objectIsEmpty(isDeletedResponse)) {\r\n//       setVideoUploading(false);\r\n//       setImageUploading(false);\r\n//       const { message, code } = isDeletedResponse;\r\n//       if (code !== 0) {\r\n//         alert(message);\r\n//       } else {\r\n//         alert(message);\r\n//         getBookingVideoAndImages(cartId ? cartId : state.cartId);\r\n//       }\r\n//       makeIsDeletedResponseEmpty();\r\n//     }\r\n//   }, [\r\n//     cartId,\r\n//     getBookingVideoAndImages,\r\n//     isDeletedResponse,\r\n//     makeIsDeletedResponseEmpty,\r\n//     state.cartId,\r\n//   ]);\r\n\r\n//   useEffect(() => {\r\n//     if (nextPageAttributes) {\r\n//       makeServiceAttributesNextPageFalse();\r\n//       isInClinic\r\n//         ? saveBookingDateAndTime({\r\n//             selectedTime,\r\n//             selectedDate,\r\n//             bookingId: state.bookingId,\r\n//             cartId: state.cartId,\r\n//             notes: textNotes,\r\n//           })\r\n//         : \r\n//         !state.productFlag ? history.push({\r\n//         // state.productFlag ? history.push({\r\n//             pathname: `/booking/${service}/date-time-selection`,\r\n//             state: {\r\n//               ...state,\r\n//               notes: textNotes,\r\n//               bookingId: bookingId ? bookingId : state.bookingId,\r\n//               cartId: cartId ? cartId : state.cartId,\r\n//             },\r\n//           })\r\n//           :\r\n//           history.push({\r\n//             pathname: `/product-list:${service}`,\r\n//             state: {\r\n//               ...state,\r\n//               notes: textNotes,\r\n//               bookingId: bookingId ? bookingId : state.bookingId,\r\n//               cartId: cartId ? cartId : state.cartId,\r\n//               pathName: `/booking/${service}/date-time-selection`,\r\n//               bookingName: serviceName \r\n//             },\r\n//           });\r\n//     }\r\n//   }, [\r\n//     bookingId,\r\n//     cartId,\r\n//     isInClinic,\r\n//     makeServiceAttributesNextPageFalse,\r\n//     nextPageAttributes,\r\n//     saveBookingDateAndTime,\r\n//     selectedDate,\r\n//     selectedTime,\r\n//     service,\r\n//     state,\r\n//     textNotes,\r\n//   ]);  \r\n//   useEffect(() => {\r\n//     if (isInClinic && nextPageDateTimeSelection && !state?.gated ) {\r\n//       makeDateTimeNextPageFalse();\r\n//       history.push({\r\n//         pathname: `/booking/${service}/summary`,\r\n//         state: {\r\n//           ...state,\r\n//         },\r\n//       });\r\n//     }\r\n//   }, [\r\n//     isInClinic,\r\n//     makeDateTimeNextPageFalse,\r\n//     nextPageDateTimeSelection,\r\n//     service,\r\n//     state,\r\n//   ]);\r\n\r\n//   const handleChangefieldValue = (id, value) => {\r\n//     setFieldAnswers(getUniqueData([{ id, value }, ...fieldAnswers], \"id\"));\r\n//   };\r\n\r\n//   const handleCheckBoxError = ({ isRequired, id, error }) => {\r\n//     isRequired === true &&\r\n//       setErrorFields(getUniqueData([{ id, error }, ...errorFileds], \"id\"));\r\n//     return error;\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     return errorFileds.some((field) => field.error === true)\r\n//       ? alert(\"Please fill required fields\")\r\n//       : saveServiceAttributes({\r\n//           cartId: cartId ? cartId : state.cartId,\r\n//           bookingId: bookingId ? bookingId : state.bookingId,\r\n//           fieldAnswers,\r\n//         });\r\n//   };\r\n\r\n//   const imageHandler = (e) => {\r\n//     e.preventDefault();\r\n//     setImageUploading(true);\r\n//     if (e.target.files[0]) {\r\n//       uploadBookingVideo({\r\n//         cartId: cartId ? cartId : state.cartId,\r\n//         userId,\r\n//         src: e.target.files[0],\r\n//         filetype: \"I\",\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   const videoHandler = (e) => {\r\n//     e.preventDefault();\r\n//     setVideoUploading(true);\r\n//     if (e.target.files[0]) {\r\n//       uploadBookingVideo({\r\n//         cartId: cartId ? cartId : state.cartId,\r\n//         userId,\r\n//         src: e.target.files[0],\r\n//         filetype: \"V\",\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   const deleteImageHandler = (e, id) => {\r\n//     e.stopPropagation();\r\n//     e.preventDefault();\r\n//     setImageUploading(true);\r\n//     deleteImageOrVideo({ cartId: cartId ? cartId : state.cartId, id });\r\n//   };\r\n\r\n//   const deleteVideoHandler = (e, id) => {\r\n//     e.stopPropagation();\r\n//     e.preventDefault();\r\n//     setVideoUploading(true);\r\n//     deleteImageOrVideo({ cartId: cartId ? cartId : state.cartId, id });\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"fae--service-attributes-page-container dpt dpb\">\r\n//         <div className=\"fae--service-attributes-page-wrapper\">\r\n//           <FAETitle\r\n//             label={serviceName}\r\n//             logo={getFileSrcFromPublicFolder(\"title_logo.svg\")}\r\n//           />\r\n//           {loading && (\r\n//             <FAELoading type=\"svg\" loaderImage={loaderImage} height=\"200px\" />\r\n//           )}\r\n//           {!loading && (\r\n//             <form\r\n//               onSubmit={handleSubmit}\r\n//               className=\"fae--service-attributes-page-attributes-form\"\r\n//             >\r\n//               {Children.toArray(\r\n//                 serviceAttributes.map((attribute) => {\r\n//                   const {\r\n//                     attributeTypeName,\r\n//                     attributeKey,\r\n//                     attributeID,\r\n//                     options = [],\r\n//                     isRequired,\r\n//                   } = attribute;\r\n//                   const fieldType = attributeTypeName.toLowerCase();\r\n//                   return (\r\n//                     <>\r\n//                       {fieldType === \"select\" && (\r\n//                         <FAESelect\r\n//                           label={attributeKey}\r\n//                           primary\r\n//                           shadowBoxProps={{ primary: true }}\r\n//                           values={faeFormDataParser(options)}\r\n//                           required={isRequired}\r\n//                           isRequired={isRequired}\r\n//                           getSelectedValue={(value) =>\r\n//                             handleChangefieldValue(attributeID, value)\r\n//                           }\r\n//                         />\r\n//                       )}\r\n//                       {fieldType === \"textbox\" && (\r\n//                         <FAETextField\r\n//                           label={attributeKey}\r\n//                           primary\r\n//                           shadowBoxProps={{ primary: true }}\r\n//                           placeholder={attributeKey}\r\n//                           required={isRequired}\r\n//                           isRequired={isRequired}\r\n//                           getValue={(value) =>\r\n//                             handleChangefieldValue(attributeID, value)\r\n//                           }\r\n//                         />\r\n//                       )}\r\n//                       {fieldType === \"checkbox\" && (\r\n//                         <FAECheckBoxGroup\r\n//                           label={attributeKey}\r\n//                           values={faeFormDataParser(options)}\r\n//                           primary\r\n//                           shadowBoxProps={{ primary: true }}\r\n//                           error={(values) =>\r\n//                             isRequired && values.length < 1\r\n//                               ? handleCheckBoxError({\r\n//                                   isRequired,\r\n//                                   id: attributeID,\r\n//                                   error: true,\r\n//                                 })\r\n//                               : handleCheckBoxError({\r\n//                                   isRequired,\r\n//                                   id: attributeID,\r\n//                                   error: false,\r\n//                                 })\r\n//                           }\r\n//                           errorMessage=\"Select at least 1\"\r\n//                           isRequired={isRequired}\r\n//                           getSelectedValues={(values) =>\r\n//                             handleChangefieldValue(\r\n//                               attributeID,\r\n//                               values.toString()\r\n//                             )\r\n//                           }\r\n//                         />\r\n//                       )}\r\n//                       {fieldType === \"radiobutton\" && (\r\n//                         <FAERadioGroup\r\n//                           label={attributeKey}\r\n//                           values={faeFormDataParser(options)}\r\n//                           primary\r\n//                           shadowBoxProps={{ primary: true }}\r\n//                           isRequired={isRequired}\r\n//                           required={isRequired}\r\n//                           getSelectedValue={(value) =>\r\n//                             handleChangefieldValue(attributeID, value)\r\n//                           }\r\n//                         />\r\n//                       )}\r\n//                     </>\r\n//                   );\r\n//                 })\r\n//               )}\r\n//               <FAEShadowBox>\r\n//                 <FAETextField\r\n//                   label=\"Add Text Notes\"\r\n//                   placeholder=\"Notes...\"\r\n//                   primary\r\n//                   shadowBoxProps={{\r\n//                     primary: true,\r\n//                   }}\r\n//                   value={textNotes}\r\n//                   getValue={(value) => setTextNotes(value)}\r\n//                 />\r\n//               </FAEShadowBox>\r\n//               <FAEShadowBox\r\n//                 className=\"fae--service-attributes-page-notes-wrapper\"\r\n//                 padding\r\n//                 primary\r\n//                > \r\n//                 <div className=\"fae--service-attributes-page-image-or-video-notes-wrapper\">\r\n//                   <div className=\"fae--service-attributes-page-add-wrapper\">\r\n//                     <label htmlFor=\"video-upload\" className=\"pointer\">\r\n//                       <FAEText className=\"fae--service-attributes-uploading-image-or-video-button\">\r\n//                         <img\r\n//                           src={videoUploadIcon}\r\n//                           alt=\"video_upload_icon\"\r\n//                           width=\"40px\"\r\n//                           height=\"40px\"\r\n//                         />\r\n//                         Add Video Notes\r\n//                       </FAEText>\r\n//                     </label>\r\n//                     <input\r\n//                       type=\"file\"\r\n//                       accept=\"video/*\"\r\n//                       name=\"image-upload\"\r\n//                       id=\"video-upload\"\r\n//                       onChange={videoHandler}\r\n//                       style={{ display: \"none\" }}\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"fae--service-attributes-page-add-wrapper\">\r\n//                     <label htmlFor=\"image-upload\" className=\"pointer\">\r\n//                       <FAEText className=\"fae--service-attributes-uploading-image-or-video-button\">\r\n//                         <img\r\n//                           src={imageUploadIcon}\r\n//                           alt=\"image_upload_icon\"\r\n//                           width=\"40px\"\r\n//                           height=\"40px\"\r\n//                         />\r\n//                         Add Image Notes\r\n//                       </FAEText>\r\n//                     </label>\r\n//                     <input\r\n//                       type=\"file\"\r\n//                       accept=\"image/*\"\r\n//                       name=\"image-upload\"\r\n//                       id=\"image-upload\"\r\n//                       onChange={imageHandler}\r\n//                       style={{ display: \"none\" }}\r\n//                       // multiple\r\n//                     />\r\n//                   </div>\r\n//                 </div>\r\n//               </FAEShadowBox>\r\n//               <FAEShadowBox\r\n//                 padding\r\n//                 primary\r\n//                 style={{ flexDirection: \"column\", gap: \"10px\" }}\r\n//               >\r\n//                 <div className=\"fae--service-attributes-uploaded-images-or-videos-wrapper line-break\">\r\n//                   <FAEText subHeading>Videos</FAEText>\r\n//                   <div className=\"fae--services-attributes-page-already-uploaded-images-and-videos\">\r\n//                     {!videoUploading ? (\r\n//                       uploadedVideos.map(({ filePath, id }) => (\r\n//                         <div className=\"fae--service-attributes-custom-image-or-video-wrapper-main-container\">\r\n//                           <a\r\n//                             className=\"fae--service-attributes-custom-image-or-video-wrapper\"\r\n//                             target=\"_blank\"\r\n//                             href={filePath}\r\n//                             rel=\"noreferrer\"\r\n//                           >\r\n//                             <div className=\"fae--service-card-image-container\">\r\n//                               <video\r\n//                                 src={filePath}\r\n//                                 alt={filePath}\r\n//                                 width=\"100%\"\r\n//                                 height=\"100%\"\r\n//                                 type=\"video/mp4\"\r\n//                                 key={id}\r\n//                               />\r\n//                             </div>\r\n//                           </a>\r\n//                           <div\r\n//                             onClick={(e) => {\r\n//                               deleteVideoHandler(e, id);\r\n//                              }}\r\n//                             className=\"fae--addresses-delete-icon-wrapper pointer\"  >\r\n//                             <div className=\"fae--addresses-delete-stroke\"></div>\r\n//                           </div>\r\n//                         </div>\r\n//                       ))\r\n//                     ) : (\r\n//                       <FAELoading\r\n//                         loaderImage={loaderImage}\r\n//                         height=\"200px\"\r\n//                         type=\"svg\"\r\n//                       />\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"fae--service-attributes-uploaded-images-or-videos-wrapper\">\r\n//                   <FAEText subHeading>Images</FAEText>\r\n//                   <div className=\"fae--services-attributes-page-already-uploaded-images-and-videos\">\r\n//                     {!imageUploading ? (\r\n//                       uploadedImages.map(({ id, filePath }) => (\r\n//                         <div className=\"fae--service-attributes-custom-image-or-video-wrapper-main-container\">\r\n//                           <a\r\n//                             className=\"fae--service-attributes-custom-image-or-video-wrapper\"\r\n//                             target=\"_blank\"\r\n//                             href={filePath}\r\n//                             rel=\"noreferrer\"\r\n//                           >\r\n//                             <FAEImage\r\n//                               placeholder={placeholder}\r\n//                               src={filePath}\r\n//                               alt={filePath}\r\n//                               key={id}\r\n//                               width=\"100%\"\r\n//                               height=\"100%\"\r\n//                             />\r\n//                           </a>\r\n//                           <div\r\n//                             onClick={(e) => {\r\n//                               deleteImageHandler(e, id);\r\n//                             }}\r\n//                             className=\"fae--addresses-delete-icon-wrapper pointer\"  >\r\n//                             <div className=\"fae--addresses-delete-stroke\"></div>\r\n//                           </div>\r\n//                         </div>\r\n//                       ))\r\n//                     ) : (\r\n//                       <FAELoading\r\n//                         loaderImage={loaderImage}\r\n//                         height=\"200px\"\r\n//                         type=\"svg\"\r\n//                       />\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               </FAEShadowBox>\r\n//               <FAEButton\r\n//                 type=\"submit\"\r\n//                 className=\"fae--service-attributes-button\" >\r\n//                 Next\r\n//               </FAEButton>\r\n//             </form>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// const mapStateToProps = ({\r\n//   serviceAttributesPageReducer: {\r\n//     error,\r\n//     loading,\r\n//     serviceAttributes,\r\n//     nextPageAttributes,\r\n//     videoUploadedResponse,\r\n//     uploadedImages,\r\n//     uploadedVideos,\r\n//     isDeletedResponse,\r\n//   },\r\n//   addressSelectionPageReducer: { bookingId, cartId },\r\n//   dateTimeSelectionPageReducer: { nextPageDateTimeSelection },\r\n// }) => ({\r\n//   error,\r\n//   loading,\r\n//   serviceAttributes,\r\n//   nextPageAttributes,\r\n//   videoUploadedResponse,\r\n//   bookingId,\r\n//   cartId,\r\n//   uploadedImages,\r\n//   uploadedVideos,\r\n//   isDeletedResponse,\r\n//   nextPageDateTimeSelection,\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return bindActionCreators(\r\n//     {\r\n//       getServiceAttributesData,\r\n//       makeServiceAttributesNextPageFalse,\r\n//       saveServiceAttributes,\r\n//       uploadBookingVideo,\r\n//       saveAddress,\r\n//       makeVideoUploadedResponseEmpty,\r\n//       makeNextPageFalse,\r\n//       getBookingVideoAndImages,\r\n//       deleteImageOrVideo,\r\n//       makeIsDeletedResponseEmpty,\r\n//       makeDateTimeNextPageFalse,\r\n//       saveBookingDateAndTime,\r\n//     },\r\n//     dispatch\r\n//   );\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(ServiceAttributesPage);\r\n"],"sourceRoot":""}