{"version":3,"sources":["redux/actions/servicesPageActions.js","components/trainings/ChelsFordTrainingCard.js","Pages/ServicesPage/ServicesPage.js"],"names":["APP_BASE_URL","process","REACT_APP_BASE_URL","getServices","_ref","industryName","userCountryId","fetchAction","type","headers","contentType","endpoint","concat","verb","ChelsFordTrainingCard","loaderImage","getFileSrcFromPublicFolder","placeholder","connect","_ref2","_ref2$servicesPageRed","servicesPageReducer","error","loading","services","defaultReducer","dispatch","bindActionCreators","_ref$services","propsCountryId","propsIndustryName","con_padding_props","useParams","industry","addSpaces","document","title","console","log","useEffect","_jsx","FAELoading","height","doPadding","length","_Fragment","children","className","style","paddingBottom","_jsxs","FAEVerticalScrollServices","loaderProps","faeServicesParser","slice","primary","Array","isArray","FAEText","subHeading","textAlign","src"],"mappings":"+RAEMA,EAAeC,mIAAYC,mBAEpBC,EAAc,SAAHC,GAAyC,IAAnCC,EAAYD,EAAZC,aAAcC,EAAaF,EAAbE,cAC1C,OAAOC,YAAY,CACjBC,KAAM,oBACNC,QAAS,CAAEC,YAAa,iBACxBC,SAAS,GAADC,OAAKZ,EAAY,0BAAAY,OAAyBP,EAAY,KAAAO,OAAIN,GAClEO,KAAM,OAEV,E,oDCeeC,ICJTC,EAAcC,YAA2B,cACzCC,EAAcD,YAA2B,mBAqHhCE,eAnBS,SAAHC,GAAA,IAAAC,EAAAD,EACnBE,oBAC+B,MAC1B,CACLC,MAH4BF,EAALE,MAIvBC,QAJqCH,EAAPG,QAK9BC,SAL+CJ,EAARI,SAMvClB,cAL+Ba,EAA/BM,eAAkBnB,cAMnB,IAE0B,SAACoB,GAC1B,OAAOC,YACL,CACExB,eAEFuB,EAEJ,GAEeR,EAnHa,SAAHd,GASlB,IARLD,EAAWC,EAAXD,YAAWyB,EAAAxB,EACXoB,gBAAQ,IAAAI,EAAG,GAAEA,EACbL,EAAOnB,EAAPmB,QAEAjB,GADKF,EAALkB,MACalB,EAAbE,eACAuB,EAAczB,EAAdyB,eACAC,EAAiB1B,EAAjB0B,kBACAC,EAAiB3B,EAAjB2B,kBAGM1B,GADe2B,cAAbC,SACaC,YAAUJ,EAAmB,MAclD,GAbAK,SAASC,MAAK,eAAAxB,OAAkBP,GAChCgC,QAAQC,IAAIR,EAAmB,qBAC/BS,qBAAU,WACe,KAAnBV,IACFQ,QAAQC,IAAI,sBACZD,QAAQC,IAAIT,GACZQ,QAAQC,IAAI,kBACZnC,EAAY,CACVE,aAAcA,EACdC,cAAeuB,IAGrB,GAAG,CAAC1B,EAAaE,EAAcC,IAC3BiB,EACF,OAAOiB,cAACC,aAAU,CAACjC,KAAK,MAAMO,YAAaA,EAAa2B,OAAO,UAEjE,IAAMC,GACI,OAARnB,QAAQ,IAARA,OAAQ,EAARA,EAAUoB,QAAS,EAAwB,GAAnBpB,EAASoB,OAAc,IAAM,IAAO,IAG9D,OADAP,QAAQC,IAAId,EAAU,eAEpBgB,cAAAK,WAAA,CAAAC,SACEN,cAAA,OACEO,UAAU,mCACVC,MAAO,CACLC,cAAelB,GAAwCY,GACvDG,UAMAvB,GACA2B,eAAAL,WAAA,CAAAC,SAAA,CACEN,cAACW,4BAAyB,CACxBJ,UAAU,wCACVxB,QAASA,EACT6B,YAAa,CACXrC,cACA2B,OAAQ,QACRlC,KAAM,SAERgB,SAAU6B,YAAkB7B,EAAS8B,MAAM,EAAG,IAC9CC,SAAO,EACPtC,YAAaA,IAEfuB,cAAA,OAAKO,UAAU,mBAAkBD,SAC/BN,cAACW,4BAAyB,CACxBJ,UAAU,wCACVxB,QAASA,EACT6B,YAAa,CACXrC,cACA2B,OAAQ,QACRlC,KAAM,SAERgB,SAAU6B,YAAkB7B,EAAS8B,MAAM,EAAG,IAC9CC,SAAO,EACPtC,YAAaA,OAGfM,GAAWiC,MAAMC,QAAQjC,GACJ,KAAb,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUoB,QACR,GAEAJ,cAACkB,UAAO,CACNX,UAAU,cACVY,YAAU,EACVX,MAAO,CAAEY,UAAW,UAAWd,SAE/BN,cAAA,OACEqB,IAAK7C,YAA2B,gCAKtC,SAOd,G","file":"static/js/42.826aee4e.chunk.js","sourcesContent":["import { fetchAction } from \"../utils\";\r\n\r\nconst APP_BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const getServices = ({ industryName, userCountryId }) => {\r\n  return fetchAction({\r\n    type: \"GET_SERVICES_DATA\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/Services/GetServices/${industryName}/${userCountryId}`,\r\n    verb: \"GET\",\r\n  });\r\n};\r\n","import \"./chelsford-service-card.css\"\r\n function ChelsFordTrainingCard({src, price, title}) {\r\n  return (\r\n    <div className='mt-4 col-md-12' >\r\n        <div className='row'>\r\n            {/* cards  */}\r\n            <div className='px-2 mt-3 col-md-3'>\r\n                <div className='px-1 col-md-12'>\r\n                    <img src={src} className='img-fluid obj_f' />\r\n                    <div className=\"p-0 col-md-12\">\r\n                    <div className='p-0 col-md-12' >\r\n                        <div className='text-right col-md-12 marg_neg' >\r\n                            <button className=\"btn_price\"> Â£{price} </button>\r\n                        </div>\r\n                     </div>\r\n                     <div className=\"p-0 col-md-12 bggg\"> \r\n                       <span className=\"font_cardd\">{title}</span>\r\n                     </div>\r\n                     </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n     </div>\r\n  )\r\n}\r\n\r\nexport default ChelsFordTrainingCard","//libs\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  FAEVerticalScrollServices,\r\n  FAETitle,\r\n  // FAESubServices,\r\n} from \"@findanexpert-fae/components\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n//src\r\nimport { addSpaces, getFileSrcFromPublicFolder } from \"../../utils\";\r\nimport { getServices } from \"../../redux/actions/servicesPageActions\";\r\nimport { faeServicesParser } from \"../../parsers\";\r\n\r\n//scss\r\nimport \"./ServicesPage.scss\";\r\nimport { FAEText } from \"@findanexpert-fae/components/dist/stories/FAEText/FAEText\";\r\nimport { FAELoading } from \"@findanexpert-fae/components/dist/stories/FAELoading/FAELoading\";\r\nimport ChelsFordTrainingCard from \"../../components/trainings/ChelsFordTrainingCard\";\r\n\r\nconst loaderImage = getFileSrcFromPublicFolder(\"loader.GIF\");\r\nconst placeholder = getFileSrcFromPublicFolder(\"placeholder.jpg\");\r\n\r\nexport const ServicesPage = ({\r\n  getServices,\r\n  services = [],\r\n  loading,\r\n  error,\r\n  userCountryId,\r\n  propsCountryId,\r\n  propsIndustryName,\r\n  con_padding_props,\r\n}) => {\r\n  const { industry } = useParams();\r\n  const industryName = addSpaces(propsIndustryName, \"-\");\r\n  document.title = `Chelsford | ${industryName}`;\r\n  console.log(propsIndustryName, \"propsIndustryName\");\r\n  useEffect(() => {\r\n    if (propsCountryId !== \"\") {\r\n      console.log(\"-------pppp-------\");\r\n      console.log(propsCountryId);\r\n      console.log(\"--------------\");\r\n      getServices({\r\n        industryName: industryName,\r\n        userCountryId: propsCountryId,\r\n      });\r\n    }\r\n  }, [getServices, industryName, userCountryId]);\r\n  if (loading) {\r\n    return <FAELoading type=\"svg\" loaderImage={loaderImage} height=\"630px\" />;\r\n  }\r\n  const doPadding =\r\n    services?.length < 4 ? (services.length == 1 ? 254 : 220) : 254;\r\n\r\n  console.log(services, \"getServices\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"fae--services-page-container dpb\"\r\n        style={{\r\n          paddingBottom: con_padding_props ? con_padding_props : doPadding,\r\n        }}\r\n      >\r\n        {/* <FAETitle\r\n            label={industryName}\r\n            logo={getFileSrcFromPublicFolder(\"title_logo.svg\")}\r\n          />  */}\r\n        {!loading && (\r\n          <>\r\n            <FAEVerticalScrollServices\r\n              className=\"fae--services-page-services-container\"\r\n              loading={loading}\r\n              loaderProps={{\r\n                loaderImage,\r\n                height: \"200px\",\r\n                type: \"video\",\r\n              }}\r\n              services={faeServicesParser(services.slice(0, 4))}\r\n              primary\r\n              placeholder={placeholder}\r\n            />\r\n            <div className=\"cfd-courses-list\">\r\n              <FAEVerticalScrollServices\r\n                className=\"fae--services-page-services-container\"\r\n                loading={loading}\r\n                loaderProps={{\r\n                  loaderImage,\r\n                  height: \"200px\",\r\n                  type: \"video\",\r\n                }}\r\n                services={faeServicesParser(services.slice(4, 8))}\r\n                primary\r\n                placeholder={placeholder}\r\n              />\r\n            </div>\r\n            {!loading && Array.isArray(services) ? (\r\n              services?.length !== 0 ? (\r\n                \"\"\r\n              ) : (\r\n                <FAEText\r\n                  className=\"ResultEmpty\"\r\n                  subHeading\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  <img\r\n                    src={getFileSrcFromPublicFolder(\"result not found-img.png\")}\r\n                  />\r\n                </FAEText>\r\n              )\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  servicesPageReducer: { error, loading, services },\r\n  defaultReducer: { userCountryId },\r\n}) => ({\r\n  error,\r\n  loading,\r\n  services,\r\n  userCountryId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getServices,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServicesPage);\r\n"],"sourceRoot":""}