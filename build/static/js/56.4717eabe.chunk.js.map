{"version":3,"sources":["Temps/FAEPhoneInput/FAEPhoneInput.js","Pages/SignInPage/SignInPage.js"],"names":["FAEPhoneInput","_ref","justify","align","_ref$className","className","primary","shadowBoxProps","isRequired","label","_ref$getValue","getValue","_ref$value","value","disabled","countryCode","rest","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","initialValue","setInitialValue","handleChangeValue","_ref2","code","number","length","concat","replace","replaceAll","useEffect","_jsx","_Fragment","children","FAEContainer","FAEShadowBox","_objectSpread","padding","_jsxs","FAEText","important","tertiary","MuiPhoneNumber","name","defaultCountry","toLowerCase","disableDropdown","onChange","countrydata","dialCode","variant","connect","getFileSrcFromPublicFolder","_ref6","_ref6$signInPageReduc","signInPageReducer","error","loading","signInFormResponse","_ref6$defaultReducer","defaultReducer","userCountryId","userCountry","dispatch","bindActionCreators","signIn","setSignInResponseToEmpty","setUserId","changeULocId","props","history","push","document","title","email","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","state","location","useDispatch","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","signInSuccesful","statusCode","message","customerData","wrap","_context2","prev","next","objectIsEmpty","_ref3","_callee","customer","id","_context","setCookies","setTimeout","SocketService","init","localStorage","getItem","pathname","JSON","parse","removeItem","t0","sent","t1","undefined","stop","_x","apply","arguments","alert","field","errorMessage","inputField","isEmailVerified","isEnabled","maxLength","minLength","priority","regex","type"],"mappings":"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","file":"static/js/56.4717eabe.chunk.js","sourcesContent":["//libs\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MuiPhoneNumber from \"material-ui-phone-number\";\r\n\r\n//src\r\n// import { FAEContainer } from \"../FAEContainer/FAEContainer\";\r\n// import { FAEText } from \"../FAEText/FAEText\";\r\n// import { FAEShadowBox } from \"../FAEShadowBox/FAEShadowBox\";\r\nimport { FAEShadowBox,FAEText, FAEContainer } from \"@findanexpert-fae/components\"\r\n//scss\r\nimport \"./FAEPhoneInput.scss\";\r\n\r\nexport  const FAEPhoneInput = ({\r\n  justify,\r\n  align,\r\n  className = \"\",\r\n  primary,\r\n  shadowBoxProps,\r\n  isRequired,\r\n  label,\r\n  getValue = () => {},\r\n  value = \"\",\r\n  disabled,\r\n  countryCode,\r\n  ...rest\r\n}) => {\r\n  const [initialValue, setInitialValue] = useState(\"\");\r\n\r\n const handleChangeValue = ({ code, number }) => {\r\n    setInitialValue(value);\r\n    number.length > 3\r\n      ? getValue(\r\n          `+${code}-${number\r\n            .replace(\"+\", \"\")\r\n            .replace(code, \"\")\r\n            .replaceAll(\" \", \"\")\r\n            .replace(/[^\\w\\s]/gi, \"\")}`\r\n        )\r\n      : getValue(number);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInitialValue(value);\r\n  }, [value]);\r\n\r\n  return (\r\n    <>\r\n      <FAEContainer justify={justify} align={align}>\r\n        {primary ? (\r\n          <FAEShadowBox {...shadowBoxProps} padding={true}>\r\n            <div className={`fae--phone-input-container ${className}`}>\r\n              <FAEText important={isRequired && true} tertiary>\r\n                {label}\r\n              </FAEText>\r\n              <MuiPhoneNumber\r\n                name=\"phone\"\r\n                data-cy=\"user-phone\"\r\n                defaultCountry={countryCode?countryCode.toLowerCase():\"pk\"}\r\n                className={className}\r\n                value={initialValue}\r\n                disabled={disabled}\r\n                disableDropdown={disabled}\r\n                onChange={(number, countrydata) =>\r\n                  handleChangeValue({ code: countrydata.dialCode, number })\r\n                }\r\n                {...rest}\r\n              />\r\n            </div>\r\n          </FAEShadowBox>\r\n        ) : (\r\n          <div className={`fae--select-container ${className}`}>\r\n            <FAEText important={isRequired && true} tertiary>\r\n              {label}\r\n            </FAEText>\r\n            <MuiPhoneNumber\r\n              name=\"phone\"\r\n              data-cy=\"user-phone\"\r\n              defaultCountry={countryCode?countryCode:\"pk\"}\r\n              className={className}\r\n              variant=\"outlined\"\r\n              value={initialValue}\r\n              disabled={disabled}\r\n              disableDropdown={disabled}\r\n              onChange={(number, countrydata) =>\r\n                handleChangeValue({ code: countrydata.dialCode, number })\r\n              }\r\n              {...rest}\r\n            />\r\n          </div>\r\n        )}\r\n      </FAEContainer>\r\n    </>\r\n  );\r\n};\r\nexport default FAEPhoneInput","//libs\r\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\r\n// import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\n// import 'react-tabs/style/react-tabs.css';\r\nimport {\r\n  FAETitle,\r\n  FAELoading,\r\n  FAETextField,\r\n  FAEButton,\r\n  FAEText,\r\n} from \"@findanexpert-fae/components\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n//src\r\nimport {\r\n  getFileSrcFromPublicFolder,\r\n  getUniqueData,\r\n  objectIsEmpty,\r\n  replaceSpaces,\r\n  setCookies,\r\n  validateInput,\r\n} from \"../../utils\";\r\nimport {\r\n  setSignInResponseToEmpty,\r\n  signIn,\r\n} from \"../../redux/actions/signInPageActions\";\r\nimport { setUserId } from \"../../redux/actions/defaultActions\";\r\nimport {changeULocId} from \"../../redux/actions/changeCountryLocId\"\r\nimport history from \"../../history\";\r\n\r\n//scss\r\n// import \"./SignInPage.scss\";\r\nimport { FAERadioGroup } from \"@findanexpert-fae/components/dist/stories/FAERadioGroup/FAERadioGroup\";\r\n//import { FAEPhoneInput } from \"@findanexpert-fae/components/dist/stories/FAEPhoneInput/FAEPhoneInput\";\r\nimport { faeFormDataParser } from \"../../parsers\";\r\nimport FAEPhoneInput from \"../../Temps/FAEPhoneInput/FAEPhoneInput\";\r\nimport { SocketService } from \"../../helpers/socketservice\";\r\nimport { FAEImage } from \"@findanexpert-fae/components/dist/stories/FAEImage/FAEImage\";\r\nconst loaderImage = getFileSrcFromPublicFolder(\"loader.webm\");\r\n\r\nconst SignInPage = ({\r\n  loading,\r\n  error,\r\n  signInFormResponse,\r\n  signIn,\r\n  setSignInResponseToEmpty,\r\n  setUserId,\r\n  userCountryId,\r\n  userCountry,\r\n  changeULocId,\r\n  ...props\r\n}) => {\r\n\r\n  useEffect(() => {\r\n    history.push(\"/account\")\r\n  }, []);\r\n  //javascript for Tab\r\n\r\n  function openCity(cityName) {\r\n    var i;\r\n    var x = document.getElementsByClassName(\"Phone\");\r\n    for (i = 0; i < x.length; i++) {\r\n      x[i].style.display = \"none\";  \r\n    }\r\n    document.getElementById(signIn).style.display = \"block\";  \r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n  document.title = \"Expert | Log In\";\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showImgInp, setShowImgInp] = useState(\"Email\");\r\n\r\n  const [errorFileds, setErrorFields] = useState([]);\r\n  const [fieldAnswers, setFieldAnswers] = useState([]); \r\n  const {\r\n    history: { location: state },\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(async () => { \r\n    if (!objectIsEmpty(signInFormResponse)) { \r\n      const signInSuccesful = async (customer) => {\r\n        const { id } = customer;\r\n        \r\n        await setCookies(\"userId\", id);\r\n        await setCookies(\"customer_details\", customer);\r\n        //await changeULocId(id,  customer.firstName)\r\n        await setUserId(id);\r\n        setTimeout(() => {\r\n          SocketService.init(dispatch);\r\n        }, 300);\r\n        if (!objectIsEmpty(localStorage.getItem(\"redirectUrl\"))) { \r\n          await history.push({\r\n            pathname: `${localStorage.getItem(\"redirectUrl\")}`,\r\n            state: JSON.parse(localStorage.getItem(\"stateObject\")),\r\n          });\r\n          await localStorage.removeItem(\"redirectUrl\");\r\n        } else { \r\n          (await state.state) !== undefined\r\n            ? history.push(`${state.state.next}`)\r\n            : history.push(\"/\");\r\n        }\r\n      };\r\n      const { statusCode, message, customerData } = signInFormResponse;\r\n      // statusCode === 2\r\n      //   ? history.push({\r\n      //       pathname: \"/verify-account\",\r\n      //       state: { email: email },\r\n      //     })\r\n      //   :\r\n      (await statusCode) !== 0 || statusCode == 2\r\n        ? alert(message)\r\n        : signInSuccesful(customerData);\r\n      await setSignInResponseToEmpty();\r\n    }\r\n  }, [\r\n    signInFormResponse,\r\n    setSignInResponseToEmpty,\r\n    setUserId,\r\n    email,\r\n    state.state,\r\n  ]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    signIn(email, password);\r\n  };\r\n\r\n  const fOption = [\r\n    {\r\n      id: 139,\r\n      value: \"Email\",\r\n    },\r\n    {\r\n      id: 140,\r\n      value: \"Phone Number\",\r\n    },\r\n    {\r\n      id: 140,\r\n      value: \"Account Number\"\r\n    }\r\n  ];\r\n  const profileFormParser = (data) => {\r\n    const parsedData = data?.map(({ value, id }) => ({\r\n      value: `${id}`,\r\n      label: value,\r\n    }));\r\n    return parsedData;\r\n  };\r\n  const handleMailBoxAndMobile =(value) => { \r\n    setShowImgInp(value); \r\n  };\r\n  \r\n\r\n\r\n\r\n// Eamil validation \r\n  const handleChangefieldValue = ({ value, regex, id, fieldType, label }) => {\r\n     setEmail(value.replaceAll(\"-\", \"\").trim());  \r\n    value !== \"\" &&\r\n      setErrorFields(\r\n        getUniqueData(\r\n          [\r\n            { fieldId: id, error: !validateInput(regex, value) },\r\n            ...errorFileds,\r\n          ],\r\n          \"fieldId\"\r\n        )\r\n      );\r\n  };\r\nconst field= { \r\n    errorMessage: \"invalid email\",\r\n    field: \"Email\"  ,\r\n    inputField: \"\",\r\n    isEmailVerified: false,\r\n    isEnabled: true,\r\n    isRequired: true, \r\n    label: \"Email\",\r\n    maxLength: 200,\r\n    minLength: 5,\r\n    priority: 44,\r\n    regex: \"^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]\", \r\n    type: \"EMAIL\" \r\n  }\r\n  const fieldAcc= { \r\n    errorMessageAcc: \"invalid Account Number\",\r\n    fieldAcc: \"number\"  ,\r\n    inputFieldAcc: \"\",\r\n    isEmailVerifiedAcc: false,\r\n    isEnabledAcc: true,\r\n    isRequiredAcc: true, \r\n    labelAcc: \"Account Number\",\r\n    maxLengthAcc: 20,\r\n    minLengthAcc: 3,\r\n    priorityAcc: 44,\r\n    regexAcc: \"[A-Za-z0-9.-]\", \r\n    typeAcc: \"number\" \r\n  }\r\n  const { type, regex, isRequired, errorMessage, label, id,  } = field; \r\n  const fieldType = type.toLowerCase();\r\n  const { typeAcc, regexAcc, isRequiredAcc, errorMessageAcc, labelAcc, idAcc,  } = fieldAcc; \r\n  const fieldTypeAcc = type.toLowerCase();\r\n  return (\r\n    <>\r\n     {/* {showImgInp == \"Email\" ? (\r\n                  <> \r\n            \r\n                        <FAETextField\r\n                            autoComplete=\"new-password\"\r\n                            className=\"fae-signin-input\"\r\n                            placeholder={label}\r\n                            primary\r\n                            required={isRequired}\r\n                            type={fieldType}\r\n                            error={(value) =>\r\n                              value !== \"\" && !validateInput(regex, value)\r\n                            }\r\n                            errorMessage={errorMessage}\r\n                            getValue={(value) =>\r\n                              handleChangefieldValue({\r\n                                value,\r\n                                regex,\r\n                                id,\r\n                                fieldType,\r\n                                label,\r\n                              })\r\n                            }\r\n                            shadowBoxProps={{\r\n                              primary: true,\r\n                            }}\r\n                          />\r\n                  </>\r\n                ) : showImgInp == \"Account Number\" ? (\r\n                  <>  \r\n                    <FAETextField\r\n                        className=\"fae-signin-input\"\r\n                        autoComplete=\"new-password\"\r\n                        placeholder={labelAcc}\r\n                        primary\r\n                        required={isRequiredAcc}\r\n                        type={\"number\"}\r\n                        error={(value) =>\r\n                            value !== \"\" && !validateInput(regexAcc, value)\r\n                        }\r\n                        errorMessage={errorMessageAcc}\r\n                        getValue={(value) =>\r\n                          handleChangefieldValue({\r\n                            value,\r\n                            regexAcc,\r\n                            idAcc,\r\n                            fieldTypeAcc,\r\n                            labelAcc,\r\n                          })\r\n                        }\r\n                        shadowBoxProps={{\r\n                          primary: true,\r\n                        }}\r\n                      />\r\n                  </>\r\n                ) : (\r\n                  <FAEPhoneInput\r\n                    className=\"fae-signin-input\"\r\n                    primary\r\n                    getValue={(value) => handleChangefieldValue({ value })}\r\n                    countryCode={userCountry}\r\n                    shadowBoxProps={{\r\n                      primary: true,\r\n                    }}\r\n                  />\r\n                )}\r\n \r\n\r\n                <div>\r\n                <FAETextField\r\n                  placeholder=\"Password\"\r\n                  primary\r\n                  className=\"fae-password-field\"\r\n                  required\r\n                  type=\"password\"\r\n                  getValue={setPassword}\r\n                  shadowBoxProps={{\r\n                    primary: true,\r\n                  }}>\r\n                  \r\n                  </FAETextField>\r\n                  <span className=\"show-password fa fa-arrow-right\"></span>\r\n                  </div>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <FAEText\r\n                    onClick={() => history.push(\"/reset-password\")}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"fae-forgot-password-text\"\r\n                  >\r\n                    Forgot Password?\r\n                  </FAEText>\r\n                </div>\r\n                <FAEButton className=\"fae--sign-in-page-form-button\">\r\n                  LogIn\r\n                </FAEButton>\r\n\r\n                </div>  \r\n\r\n \r\n              </form>\r\n            </>\r\n          )}\r\n        </div>\r\n        <ToastContainer />\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  signInPageReducer: { error, loading, signInFormResponse },\r\n  defaultReducer: { userCountryId, userCountry },\r\n}) => ({\r\n  error,\r\n  loading,\r\n  signInFormResponse,\r\n  userCountryId,\r\n  userCountry,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      signIn,\r\n      setSignInResponseToEmpty,\r\n      setUserId,\r\n      changeULocId\r\n    },\r\n    dispatch,\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPage);\r\n"],"sourceRoot":""}