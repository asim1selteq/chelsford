{"version":3,"sources":["redux/actions/subIndustriesPageActions.js","Temps/FAESubIndustry/FAESubIndustry.js","Temps/FAESubIndustries/FAESubIndustries.js","Pages/SubIndustriesPage/SubIndustriesPage.js"],"names":["APP_BASE_URL","process","REACT_APP_BASE_URL","getSubIndustries","_ref","industryName","userCountryId","fetchAction","type","headers","contentType","endpoint","concat","verb","FAESubIndustry","src","alt","label","icon","loading","loaderProps","shadowBoxProps","rest","_objectWithoutProperties","_excluded","_jsx","_Fragment","children","FAEShadowBox","_objectSpread","FAELoading","_jsxs","className","FAEImage","placeholder","getFileSrcFromPublicFolder","width","window","screen","FAEText","FAESubIndustries","subIndustries","_ref$forwardIcon","forwardIcon","ArrowForwardIosIcon","_ref$className","justify","align","FAEContainer","map","subIndustry","index","_excluded2","loaderImage","connect","_ref2","_ref2$subIndustriesPa","subIndustriesPageReducer","error","defaultReducer","dispatch","bindActionCreators","_ref$subIndustries","industry","useParams","addSpaces","document","title","useEffect","doPadding","length","paddingBottom","height","style","FAETitle","logo","faeSubIndustriesParser","primary","Array","isArray","subHeading","textAlign"],"mappings":"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","file":"static/js/28.1a302a57.chunk.js","sourcesContent":["import { fetchAction } from \"../utils\";\r\n\r\nconst APP_BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const getSubIndustries = ({ industryName, userCountryId }) => {\r\n  return fetchAction({\r\n    type: \"GET_SUB_INDUSTRIES_DATA\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/Industry/GetSubIndustries/${industryName}/${userCountryId}`,\r\n    verb: \"GET\",\r\n  });\r\n};\r\n","// libs\r\nimport React from \"react\";\r\n\r\n// src\r\nimport { FAEText } from \"@findanexpert-fae/components\";\r\nimport { FAELoading } from \"@findanexpert-fae/components\";\r\nimport { FAEShadowBox } from \"@findanexpert-fae/components\";\r\n\r\n// css\r\nimport \"./FAESubIndustry.scss\";\r\nimport { FAEImage } from \"@findanexpert-fae/components\";\r\nimport { getFileSrcFromPublicFolder } from \"../../utils\";\r\n \r\nexport const FAESubIndustry = ({\r\n  src,\r\n  alt,\r\n  label,\r\n  icon,\r\n  loading,\r\n  loaderProps,\r\n  shadowBoxProps,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <>\r\n      <FAEShadowBox {...shadowBoxProps}>\r\n        {loading ? (\r\n          <FAELoading {...loaderProps} />\r\n        ) : (\r\n          <div className=\"fae--sub-industry\" {...rest}>\r\n            <div className=\"fae--sub-industry-content\">\r\n              <FAEImage\r\n                src={src}\r\n                alt={alt}\r\n                placeholder={getFileSrcFromPublicFolder(\"placeholder.jpg\")}\r\n                width={window.screen.width > 599 ? \"250px\" : \"200px\"} \r\n              />\r\n              {/* <img\r\n                src={src}\r\n                alt={alt}\r\n                width={window.screen.width > 599 ? \"250px\" : \"200px\"}\r\n              /> */}\r\n              <FAEText>{label}</FAEText>\r\n            </div>\r\n            {window.screen.width > 799 && (\r\n              <div className=\"fae--sub-industry-icon\">{icon}</div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </FAEShadowBox>\r\n    </>\r\n  );\r\n};\r\n","// libs\r\nimport React from \"react\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\n\r\n// src\r\nimport { FAESubIndustry } from \"../FAESubIndustry/FAESubIndustry\";\r\nimport { FAEContainer } from \"@findanexpert-fae/components\";\r\nimport { FAELoading } from \"@findanexpert-fae/components\";\r\n\r\n// css\r\nimport \"./FAESubIndustries.scss\";\r\n\r\nexport const FAESubIndustries = ({\r\n  subIndustries,\r\n  forwardIcon = <ArrowForwardIosIcon />,\r\n  className = \"\",\r\n  justify,\r\n  align,\r\n  loading,\r\n  loaderProps,\r\n  shadowBoxProps,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <FAEContainer justify={justify} align={align}>\r\n      {loading ? (\r\n        <FAELoading {...loaderProps} />\r\n      ) : (\r\n        <div className={`fae--sub-industries ${className}`} {...rest}>\r\n          {subIndustries.map((subIndustry, index) => {\r\n            const { src, alt, label, ...rest } = subIndustry;\r\n            return (\r\n              <FAESubIndustry\r\n                key={index}\r\n                src={src}\r\n                alt={alt}\r\n                label={label}\r\n                icon={forwardIcon}\r\n                shadowBoxProps={shadowBoxProps}\r\n                {...rest}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </FAEContainer>\r\n  );\r\n};\r\n","//libs\r\nimport React, { useEffect } from \"react\";\r\nimport {  FAETitle } from \"@findanexpert-fae/components\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n//src\r\nimport { addSpaces, getFileSrcFromPublicFolder } from \"../../utils\";\r\nimport { getSubIndustries } from \"../../redux/actions/subIndustriesPageActions\";\r\nimport { faeSubIndustriesParser } from \"../../parsers\";\r\n\r\n//scss\r\nimport \"./SubIndustriesPage.scss\";\r\nimport { FAEText } from \"@findanexpert-fae/components\";\r\nimport { FAELoading } from \"@findanexpert-fae/components\";\r\nimport { FAESubIndustries } from \"../../Temps/FAESubIndustries/FAESubIndustries\";\r\n\r\nconst loaderImage = getFileSrcFromPublicFolder(\"loader.GIF\");\r\n\r\nconst SubIndustriesPage = ({\r\n  getSubIndustries,\r\n  subIndustries = [],\r\n  loading,\r\n  userCountryId,\r\n  error,\r\n}) => {\r\n  const { industry } = useParams();\r\n  const industryName = addSpaces(industry, \"-\");\r\n  document.title = `Chelsford | ${industryName}`;\r\n  useEffect(() => {\r\n    if (userCountryId !== \"\") {\r\n      getSubIndustries({ industryName, userCountryId });\r\n    }\r\n  }, [getSubIndustries, industryName, userCountryId]);\r\n  const doPadding= subIndustries?.length<4 ?(subIndustries.length==1 ?{paddingBottom: 354}:{paddingBottom: 350}): {paddingBottom: 40}\r\n  \r\n  if (loading) {\r\n    return <FAELoading type=\"svg\" loaderImage={loaderImage} height=\"630px\" />;\r\n  } \r\n  return (\r\n    <>\r\n      <div className=\"fae--sub-industries-page-container dpt dpb\" style={doPadding} >\r\n        <div className=\"fae--sub-industries-page-wrapper\">\r\n          <FAETitle\r\n            label={industryName}\r\n            logo={getFileSrcFromPublicFolder(\"title_logo.svg\")}\r\n          />\r\n          <FAESubIndustries\r\n            loading={loading}\r\n            loaderProps={{\r\n              loaderImage,\r\n              height: \"150px\",\r\n              type: \"video\",\r\n            }}\r\n            subIndustries={faeSubIndustriesParser(subIndustries)}\r\n            shadowBoxProps={{ primary: true }}\r\n          />\r\n          { !loading && Array.isArray(subIndustries)? (subIndustries.length ==0? <FAEText className=\"ResultEmpty\" subHeading style={{textAlign: \"center\"}}> <img src={getFileSrcFromPublicFolder(\"result not found-img.png\")} /></FAEText>:\"\"):\"\"\r\n          } \r\n         </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  subIndustriesPageReducer: { error, loading, subIndustries },\r\n  defaultReducer: { userCountryId },\r\n}) => ({\r\n  error,\r\n  loading,\r\n  subIndustries,\r\n  userCountryId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getSubIndustries,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SubIndustriesPage);\r\n"],"sourceRoot":""}