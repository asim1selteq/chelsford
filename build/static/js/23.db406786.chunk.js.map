{"version":3,"sources":["Temps/FAEUserInfoTabs/FAEUserInfoTabs.js","Pages/UserInfoPageLayout/UserInfoPageLayout.js","Pages/EditProfilePage/EditProfilePage.js"],"names":["FAEUserInfoTabs","_ref","_ref$className","className","_ref$tabs","tabs","renderOption","_ref$activeTab","activeTab","rest","_objectWithoutProperties","_excluded","selectedTab","value","toLowerCase","_jsx","_Fragment","children","_objectSpread","concat","Children","toArray","map","tab","index","label","_tab$href","href","icon","svgIconSrc","_excluded2","_jsxs","FAEText","tertiary","FAEImage","src","target","rel","userInfoTabs","getFileSrcFromPublicFolder","onClick","history","push","UserInfoPageLayout","childWidth","paddingTop","location","useLocation","pathname","find","addSpaces","includes","toLocaleLowerCase","FAEContainer","style","width","loaderImage","profileFormParser","data","id","connect","_ref6","_ref6$editProfilePage","editProfilePageReducer","error","loading","profileFields","saveSignUpFormResponse","updateProfileRespone","userCountryId","defaultReducer","dispatch","bindActionCreators","getProfileFields","makeUpdateProfileResponseToEmpty","updateProfile","_ref2","document","title","userId","getCookies","_useState","useState","_useState2","_slicedToArray","errorFileds","setErrorFields","_useState3","_useState4","fieldAnswers","setFieldAnswers","securityAnswerField","field","countryIdFieldCode","useEffect","fieldId","answer","inputField","objectIsEmpty","message","customerData","alert","profileUpdatedSuccessfully","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","customer","wrap","_context","prev","next","setCookies","state","stop","_x","apply","arguments","handleChangefieldValue","_ref4","regex","getUniqueData","_toConsumableArray","validateInput","handleCheckBoxError","_ref5","isRequired","FAETitle","logo","FAELoading","type","height","length","onSubmit","e","preventDefault","some","parseInt","errorMessage","optionList","fieldType","FAETextField","placeholder","primary","required","getValue","shadowBoxProps","inputProps","readOnly","FAEDatePicker","dateFormat","date","year","month","day","split","getSelectedDate","maximumDate","eighteenYearsBackDate","FAERadioGroup","values","getSelectedValue","FAEPhoneInput","Fragment","FAESelect","FAECheckBoxGroup","getSelectedValues","toString","FAEButton"],"mappings":"+ZAUaA,EAAkB,SAAHC,GAMrB,IAADC,EAAAD,EALJE,iBAAS,IAAAD,EAAG,GAAEA,EAAAE,EAAAH,EACdI,YAAI,IAAAD,EAAG,GAAEA,EACTE,EAAYL,EAAZK,aAAYC,EAAAN,EACZO,iBAAS,IAAAD,EAAG,GAAEA,EACXE,EAAIC,YAAAT,EAAAU,GAEDC,EAAc,SAACC,GACnB,OAAOA,EAAMC,gBAAkBN,EAAUM,cAAgB,aAAe,EAC1E,EACA,OACEC,cAAAC,WAAA,CAAAC,SACEF,cAAA,MAAAG,wBAAA,CACEf,UAAS,sCAAAgB,OAAwChB,IAC7CM,GAAI,IAAAQ,SAEPG,WAASC,QACRhB,EAAKiB,KAAI,SAACC,EAAKC,GACb,IAAQC,EAA2DF,EAA3DE,MAAKC,EAAsDH,EAApDI,YAAI,IAAAD,EAAG,GAAEA,EAAEvB,EAAyCoB,EAAzCpB,UAAWyB,EAA8BL,EAA9BK,KAAMC,EAAwBN,EAAxBM,WAAepB,EAAIC,YAAKa,EAAGO,GACtE,MAAgB,KAATH,EACNZ,cAAAC,WAAA,CAAAC,SAEAc,eAACC,UAAOd,wBAAA,CACLe,SAAiC,eAAvBrB,EAAYa,IAClBhB,GAAI,IACRN,UAAS,sBAAAgB,OAAwBP,EAC/Ba,GACD,KAAAN,OAAIhB,GAAYc,SAAA,CACH,KAAZY,GAAkBd,cAACmB,WAAQ,CAAC/B,UAAU,mBAAmBgC,IAAKN,IACxD,KAAND,GAAYG,eAAA,OAAK5B,UAAU,mBAAkBc,SAAA,CAAC,IAAEW,EAAK,QACrDtB,EAAeA,EAAaiB,GAAOE,QAIvCV,cAAA,IAAAG,wBAAA,CACEf,UAAS,sBAAAgB,OAAwBhB,GACjCiC,OAAO,SACPT,KAAMA,EACNU,IAAI,cACA5B,GAAI,IAAAQ,SAERF,cAACiB,UAAO,CAAAf,SAAEX,EAAeA,EAAaiB,GAAOE,MAGnD,SAKV,EC9CMa,G,QAAe,CACnB,CACEb,MAAO,UACPI,WAAaU,YAA2B,yBACxCC,QAAS,kBAAMC,IAAQC,KAAK,WAAW,GAEzC,CACEjB,MAAO,gBACPI,WAAaU,YAA2B,8BACxCC,QAAS,kBAAMC,IAAQC,KAAK,0BAA0B,GAOxD,CACEjB,MAAO,kBACPI,WAAaU,YAA2B,8BACxCC,QAAS,kBAAMC,IAAQC,KAAK,mBAAmB,KAiDpCC,EA3BY,SAAH1C,GAA8C,IARhDY,EAQQ+B,EAAU3C,EAAV2C,WAAY3B,EAAQhB,EAARgB,SAAU4B,EAAU5C,EAAV4C,WAC5CC,EAAWC,cAEXvC,GAXcK,EAWWiC,EAASE,SATjCV,EAAaW,MAClB,SAAC1B,GAAG,OACgE,IAAlE2B,YAAUrC,EAAO,KAAKsC,SAAS5B,EAAIE,MAAM2B,oBAA6B,IACxE3B,OAQF,OACEV,cAAAC,WAAA,CAAAC,SACEc,eAAA,OAAK5B,UAAU,4CAA2Cc,SAAA,CACxDF,cAACf,EAAe,CACdK,KAAMiC,EACN9B,UAAWA,EACXL,UAAU,wBAEZY,cAAA,OACEZ,UAAS,6CAAAgB,OACG,OAAV0B,QAAU,IAAVA,IAAc,IACb5B,SAEHF,cAACsC,eAAY,CAAClD,UAAU,qBAAoBc,SAC1Cc,eAAA,OAAKuB,MAAO,CAAEC,MAAiB,OAAVX,QAAU,IAAVA,IAAc,QAAS3B,SAAA,CAAC,IAAEA,aAM3D,C,kOC1CMuC,EAAcjB,YAA2B,cAEzCkB,EAAoB,SAACC,GAKzB,OAJuB,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMpC,KAAI,SAAArB,GAAA,IAAGY,EAAKZ,EAALY,MAAO8C,EAAE1D,EAAF0D,GAAE,MAAQ,CAC/C9C,MAAM,GAADM,OAAKwC,GACVlC,MAAOZ,EACR,GAEH,EAmXe+C,eA5BS,SAAHC,GAAA,IAAAC,EAAAD,EACnBE,uBACEC,EAAKF,EAALE,MACAC,EAAOH,EAAPG,QACAC,EAAaJ,EAAbI,cACAC,EAAsBL,EAAtBK,uBACAC,EAAoBN,EAApBM,qBAE6B,MAC1B,CACLJ,QACAC,UACAC,gBACAG,cAL+BR,EAA/BS,eAAkBD,cAMlBF,yBACAC,uBACD,IAC0B,SAACG,GAC1B,OAAOC,YACL,CACEC,qBACAC,qCACAC,mBAEFJ,EAEJ,GAEeX,EAjXS,SAAHgB,GASd,IARLX,EAAOW,EAAPX,QAEAI,GADKO,EAALZ,MACaY,EAAbP,eACAH,EAAaU,EAAbV,cACAO,EAAgBG,EAAhBH,iBACAL,EAAoBQ,EAApBR,qBACAM,EAAgCE,EAAhCF,iCACAC,EAAaC,EAAbD,cAEAE,SAASC,MAAK,2BACd,IAAMC,EAASC,YAAW,UAC1BC,EAAsCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,EAAwCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAsBzB,EAAcjB,MAAK,SAAC2C,GAAK,OACnDA,EAAMnE,MAAM0B,SAAS,SAAS,IAE1B0C,EAAoB3B,EAAcjB,MAAM,SAAA2C,GAAK,OAAEA,EAAMnE,MAAM0B,SAAS,UAAU,IACpF2C,qBAAU,WACc,KAAlBzB,GACFI,EAAiB,CAAEJ,gBAAeU,UAEtC,GAAG,CAACN,EAAkBJ,EAAeU,IAErCe,qBAAU,WACRJ,EACExB,EAAc5C,KAAI,SAACsE,GACjB,MAAO,CAAEG,QAASH,EAAMjC,GAAIqC,OAAQJ,EAAMK,WAC5C,IAEJ,GAAG,CAAC/B,IAEJ4B,qBAAU,WACR,IAAKI,YAAc9B,GAAuB,CACxC,IAAQJ,EAAiCI,EAAjCJ,MAAOmC,EAA0B/B,EAA1B+B,QAASC,EAAiBhC,EAAjBgC,cACd,IAAVpC,EACIqC,MAAMF,GACNG,EAA2BF,GAC/B1B,GACF,CACF,GAAG,CAACA,EAAkCN,IACtC,IAAMkC,EAA0B,eAAAC,EAAAC,YAAAC,cAAAC,MAAE,SAAAC,EAAOC,GAAQ,OAAAH,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAClCC,YAAW,mBAAoBL,GAAU,KAAD,SAAAE,EAAAE,KAAA,EACxCvE,IAAQC,KAAK,CACZM,SAAS,GAAD7B,OAAKsB,IAAQK,SAASoE,MAAMF,QAClC,KAAD,mBAAAF,EAAAK,OAAA,GAAAR,EAAA,KACZ,gBAL2BS,GAAA,OAAAb,EAAAc,MAAA,KAAAC,UAAA,KAO1BC,EAAyB,SAAHC,GAA8B,IAAxB3G,EAAK2G,EAAL3G,MAAO4G,EAAKD,EAALC,MAAO9D,EAAE6D,EAAF7D,GAC9C+B,EACEgC,YAAc,CACX,CAAE3B,QAASpC,EAAIqC,OAAQnF,IAAOM,OAAAwG,YAAKlC,IACpC,YAGM,KAAV5E,GACEyE,EACEoC,YAAc,CAEV,CAAE3B,QAASpC,EAAIK,OAAQ4D,YAAcH,EAAO5G,KAAQM,OAAAwG,YACjDtC,IAEL,WAGR,EAEMwC,EAAsB,SAAHC,GAAmC,IAA7BC,EAAUD,EAAVC,WAAYpE,EAAEmE,EAAFnE,GAAIK,EAAK8D,EAAL9D,MAG7C,OAFe,IAAf+D,GACEzC,EAAeoC,YAAc,CAAC,CAAE/D,KAAIK,UAAO7C,OAAAwG,YAAKtC,IAAc,OACzDrB,CACT,EAUA,OACEjD,cAAAC,WAAA,CAAAC,SACEF,cAAC4B,UAAkB,CAAA1B,SACjBF,cAAA,OAAKZ,UAAU,mCAAkCc,SAC/Cc,eAAA,OAAK5B,UAAU,iCAAgCc,SAAA,CAC7CF,cAACiH,WAAQ,CACPvG,MAAM,iBACNtB,UAAU,kBACV8H,KAAM1F,YAA2B,oBAElC0B,GACClD,cAACmH,aAAU,CACTC,KAAK,MACL3E,YAAaA,EACb4E,OAAO,WAGTnE,GAAWC,EAAcmE,OAAS,GAClCtG,eAAA,QACEuG,SA5BO,SAACC,GAEpB,OADAA,EAAEC,iBACKnD,EAAYoD,MAAK,SAAC7C,GAAK,OAAqB,IAAhBA,EAAM5B,KAAc,IACnDqC,MAAM,+BACPqC,SAA2B,OAAlB7C,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBI,aAAeyC,SAASrE,GACpDM,EAAc,CAAEc,eAAcV,WAC9BsB,MAAM,8BACZ,EAsBclG,UAAU,sCAAqCc,SAAA,CAE9CG,WAASC,QACR6C,EAAc5C,KAAI,SAACsE,GACjB,IACEuC,EAQEvC,EARFuC,KACAV,EAOE7B,EAPF6B,MACAM,EAMEnC,EANFmC,WACAY,EAKE/C,EALF+C,aACAlH,EAIEmE,EAJFnE,MACAkC,EAGEiC,EAHFjC,GACAiF,EAEEhD,EAFFgD,WACA3C,EACEL,EADFK,WAEI4C,EAAYV,EAAKrH,cACvB,OACEiB,eAAAf,WAAA,CAAAC,SAAA,EACkB,SAAd4H,GACc,UAAdA,GACc,aAAdA,KACCpH,EAAM0B,SAAS,WACdpC,cAAC+H,eAAY,CACXrH,MAAOA,EACPsH,YAAatH,EACbuH,SAAO,EACPnI,MAAOoF,EACPgD,SAAUlB,EACVI,KAAMU,EACN7E,MAAO,SAACnD,GAAK,MACD,KAAVA,IAAiB+G,YAAcH,EAAO5G,EAAM,EAE9C8H,aAAcA,EACdO,SAAU,SAACrI,GAAK,OACd0G,EAAuB,CACrB1G,QACA4G,QACA9D,MACA,EAEJwF,eAAgB,CACdhJ,UAAW,gCAEbiJ,WAAY,CACVC,SAAwB,UAAdR,IAAyB,KAI5B,SAAdA,GACC9H,cAACuI,gBAAa,CACZ7H,MAAOA,EACPuH,SAAO,EACPG,eAAgB,CACdhJ,UAAW,gCAEb8I,UAAQ,EACRM,WAAY,SAACC,GAAI,SAAArI,OACZqI,EAAKC,KAAI,KAAAtI,OACiB,IAA3B,GAAAA,OAAGqI,EAAKE,OAAQrB,OACZmB,EAAKE,MAAK,IAAAvI,OACNqI,EAAKE,OAAO,KAAAvI,OAEK,IAAzB,GAAAA,OAAGqI,EAAKG,KAAMtB,OACVmB,EAAKG,IAAG,IAAAxI,OACJqI,EAAKG,KAAK,EAGtB9I,MACiB,KAAfoF,GAAqB,CACnBwD,KAAMf,SAASzC,EAAW2D,MAAM,KAAK,IACrCD,IAAKjB,SAASzC,EAAW2D,MAAM,KAAK,IACpCF,MAAOhB,SAASzC,EAAW2D,MAAM,KAAK,KAG1CC,gBAAiB,SAACL,GAAI,OACpBjC,EAAuB,CACrB5D,KACA9C,MAAM,GAADM,OAAKqI,EAAKC,KAAI,KAAAtI,OACU,IAA3B,GAAAA,OAAGqI,EAAKE,OAAQrB,OACZmB,EAAKE,MAAK,IAAAvI,OACNqI,EAAKE,OAAO,KAAAvI,OAEK,IAAzB,GAAAA,OAAGqI,EAAKG,KAAMtB,OACVmB,EAAKG,IAAG,IAAAxI,OACJqI,EAAKG,OAEf,EAEJG,YAAaC,gBAGF,UAAdlB,GAAwC,OAAdD,GACzB7H,cAAAC,WAAA,CAAAC,SACAF,cAACiJ,gBAAa,CACZvI,MAAOA,EACPwI,OAAQxG,EAAkBmF,GAC1BI,SAAO,EACPnI,MAAOoF,EACPkD,eAAgB,CACdhJ,UAAW,gCAEb4H,WAAYA,EACZkB,SAAUlB,EACVmC,iBAAkB,SAACrJ,GAAK,OACtB0G,EAAuB,CAAE5D,KAAI9C,SAAQ,MAK5B,UAAdgI,GACC9H,cAACoJ,gBAAa,CACZ1I,MAAOA,EACPuH,SAAO,EACPnI,MAAOoF,EACP8B,WAAYA,EACZkB,SAAUlB,EACVmB,SAAU,SAACrI,GAAK,OACd0G,EAAuB,CAAE5D,KAAI9C,SAAQ,EAEvCsI,eAAgB,CACdhJ,UAAW,kCAIF,WAAd0I,GACApH,EAAM0B,SAAS,qBAgBA,WAAd0F,GACApH,EAAM0B,SAAS,sBACbpB,eAACqI,WAAQ,CAAAnJ,SAAA,CACPF,cAACsJ,YAAS,CACR5I,MAAOA,EACPuH,SAAO,EACPG,eAAgB,CACdhJ,UAAW,gCAEb8J,OAAQxG,EAAkBmF,GAC1BK,SAAUlB,EACVA,WAAYA,EACZmC,iBAAkB,SAACrJ,GAAK,OACtB0G,EAAuB,CAAE5D,KAAI9C,SAAQ,EAEvCA,MAAOoF,IAETlF,cAAC+H,eAAY,CACXrH,MAAOkE,EAAoBlE,MAC3BsH,YAAapD,EAAoBlE,MACjCuH,SAAO,EACPC,SAAUtD,EAAoBoC,WAC9BI,KAAMxC,EAAoBwC,KAC1BnE,MAAO,SAACnD,GAAK,MACD,KAAVA,IACC+G,YACCjC,EAAoB8B,MACpB5G,EACD,EAEHA,MAAO8E,EAAoBM,WAC3B0C,aAAchD,EAAoBgD,aAClCO,SAAU,SAACrI,GAAK,OACd0G,EAAuB,CACrB1G,QACA4G,MAAO9B,EAAoB8B,MAC3B9D,GAAIgC,EAAoBhC,GACxBoE,WAAYpC,EAAoBoC,WAChCI,KAAMxC,EAAoBwC,KAAKrH,eAC/B,EAEJqI,eAAgB,CACdhJ,UAAW,gCAEbiJ,WAAY,CACVC,SAEI,UADF1D,EAAoBwC,KAAKrH,gBACZ,QA9DvBC,cAACsJ,YAAS,CACR5I,MAAOA,EACPuH,SAAO,EACPG,eAAgB,CACdhJ,UAAW,gCAEb8J,OAAQxG,EAAkBmF,GAC1BK,SAAUlB,EACVA,WAAYA,EACZmC,iBAAkB,SAACrJ,GAAK,OACtB0G,EAAuB,CAAE5D,KAAI9C,SAAQ,EAEvCA,MAAOoF,IAwDI,aAAd4C,GACC9H,cAACuJ,mBAAgB,CACf7I,MAAOA,EACPwI,OAAQxG,EAAkBmF,GAC1BI,SAAO,EACPG,eAAgB,CACdhJ,UAAW,gCAEb6D,MAAO,SAACiG,GAAM,OACZlC,GAAckC,EAAO5B,OAAS,EAC1BR,EAAoB,CAClBE,aACApE,KACAK,OAAO,IAET6D,EAAoB,CAClBE,aACApE,KACAK,OAAO,GACP,EAER2E,aAAa,oBACbZ,WAAYA,EACZwC,kBAAmB,SAACN,GAAM,OACxB1C,EAAuB,CACrB5D,KACA9C,MAAOoJ,EAAOO,YACd,MAMd,KAEFzJ,cAAC0J,YAAS,CAACtK,UAAU,qCAAoCc,SAAC,4BAU1E,G","file":"static/js/23.db406786.chunk.js","sourcesContent":["//libs\r\nimport React, { Children } from \"react\";\r\n\r\n//src\r\nimport { FAEText } from \"@findanexpert-fae/components\";\r\n\r\n//scss\r\nimport \"./FAEUserInfoTabs.scss\";\r\nimport { FAEImage } from \"@findanexpert-fae/components/dist/stories/FAEImage/FAEImage\";\r\n\r\nexport const FAEUserInfoTabs = ({\r\n  className = \"\",\r\n  tabs = [],\r\n  renderOption,\r\n  activeTab = \"\",\r\n  ...rest\r\n}) => {\r\n  const selectedTab = (value) => {\r\n    return value.toLowerCase() === activeTab.toLowerCase() ? \"active-tab\" : \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className={`fae--user-info-tabs-main-container ${className}`}\r\n        {...rest}\r\n      >\r\n        {Children.toArray(\r\n          tabs.map((tab, index) => {\r\n            const { label, href = \"\", className, icon, svgIconSrc, ...rest } = tab;\r\n            return href === \"\" ? (\r\n             <> \r\n           \r\n             <FAEText\r\n                tertiary={selectedTab(label) === \"active-tab\" ? false : true}\r\n                {...rest}\r\n                className={`fae--user-info-tab ${selectedTab(\r\n                  label\r\n                )} ${className}`}  >\r\n                {!svgIconSrc==\"\" && <FAEImage className=\"fae-sidebar-icon\" src={svgIconSrc} />}\r\n                {!icon==\"\" && <div className=\"fae-sidebar-icon\"> {icon}  </div>}\r\n                 {renderOption ? renderOption(tab) : label}\r\n              </FAEText>\r\n              </>\r\n            ) : (\r\n              <a\r\n                className={`fae--user-info-tab ${className}`}\r\n                target=\"_blank\"\r\n                href={href}\r\n                rel=\"noreferrer\"\r\n                {...rest}\r\n              >\r\n                <FAEText>{renderOption ? renderOption(tab) : label}</FAEText>\r\n              </a>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","//libs\r\nimport React from \"react\";\r\nimport {  FAEContainer } from \"@findanexpert-fae/components\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\n//src\r\nimport { addSpaces, getFileSrcFromPublicFolder } from \"../../utils\";\r\nimport history from \"../../history\";\r\nimport {FAEUserInfoTabs} from \"../../Temps/FAEUserInfoTabs/FAEUserInfoTabs\"\r\n//scss\r\nimport \"./UserInfoPageLayout.scss\";\r\nimport { FAEImage } from \"@findanexpert-fae/components/dist/stories/FAEImage/FAEImage\";\r\n \r\nconst userInfoTabs = [\r\n  {\r\n    label: \"Profile\",\r\n    svgIconSrc:  getFileSrcFromPublicFolder(\"icons/profileIcon.svg\"),\r\n    onClick: () => history.push(\"/profile\"),\r\n  },\r\n  {\r\n    label: \"Your Bookings\",\r\n    svgIconSrc:  getFileSrcFromPublicFolder(\"icons/bookingGreyColor.svg\"),\r\n    onClick: () => history.push(\"/your-bookings/upcoming\"),\r\n  }, \r\n  // {\r\n  //   label: \"Your Addresses\",\r\n  //   svgIconSrc:  getFileSrcFromPublicFolder(\"icons/locationgrey.svg\"),\r\n  //   onClick: () => history.push(\"/your-addresses\"),\r\n  // }, \r\n  {\r\n    label: \"Payment Details\",\r\n    svgIconSrc:  getFileSrcFromPublicFolder(\"icons/paymentgreyicons.svg\"),\r\n    onClick: () => history.push(\"/payment-details\"),\r\n  },\r\n  // {\r\n  //   label: \"Switch Country\",\r\n  //   svgIconSrc:  getFileSrcFromPublicFolder(\"icons/swithc-country.svg\"),\r\n  //   onClick: () => history.push(\"/switch-country\"),\r\n  // }, \r\n  // {\r\n  //   label:  \"Your Vouchers\", \r\n  //   svgIconSrc:  getFileSrcFromPublicFolder(\"icons/vouchergrey.svg\"),\r\n  //   onClick: () => history.push(\"/your-vouchers/service-voucher\"),\r\n  // }, \r\n];\r\n\r\nconst getActiveTab = (value) => {\r\n\r\n  return userInfoTabs.find(\r\n    (tab) =>\r\n      addSpaces(value, \"-\").includes(tab.label.toLocaleLowerCase()) === true\r\n  ).label;\r\n};\r\n \r\nconst UserInfoPageLayout = ({ childWidth, children, paddingTop }) => {\r\n  const location = useLocation();\r\n \r\n  const activeTab = getActiveTab(location.pathname);\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"fae--user-info-page-layout-main-container\">\r\n        <FAEUserInfoTabs\r\n          tabs={userInfoTabs}\r\n          activeTab={activeTab}\r\n          className=\"side-tabs-user-info\"\r\n        />\r\n        <div\r\n          className={`fae--user-info-page-layout-pages-data dpb ${\r\n            paddingTop ?? \"\"\r\n          }`}\r\n        >\r\n          <FAEContainer className=\"fae-page-classname\">\r\n            <div style={{ width: childWidth ?? \"100%\" }}> {children}</div>\r\n          </FAEContainer>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserInfoPageLayout;\r\n","//libs\r\nimport React, { useEffect, Children, useState, Fragment } from \"react\";\r\nimport {\r\n  FAETitle,\r\n  FAELoading,\r\n  FAETextField,\r\n  FAEButton,\r\n  FAECheckBoxGroup,\r\n  FAERadioGroup,\r\n  FAESelect,\r\n  FAEDatePicker,\r\n  FAEPhoneInput,\r\n} from \"@findanexpert-fae/components\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//src\r\nimport {\r\n  eighteenYearsBackDate,\r\n  getCookies,\r\n  getFileSrcFromPublicFolder,\r\n  getUniqueData,\r\n  objectIsEmpty,\r\n  setCookies,\r\n  validateInput,\r\n} from \"../../utils\";\r\nimport history from \"../../history\";\r\nimport {\r\n  getProfileFields,\r\n  makeUpdateProfileResponseToEmpty,\r\n  updateProfile,\r\n} from \"../../redux/actions/editProfilePageActions\";\r\nimport UserInfoPageLayout from \"../UserInfoPageLayout\";\r\n\r\n//scss\r\nimport \"./EditProfilePage.scss\";\r\n\r\nconst loaderImage = getFileSrcFromPublicFolder(\"loader.GIF\");\r\n\r\nconst profileFormParser = (data) => {\r\n  const parsedData = data?.map(({ value, id }) => ({\r\n    value: `${id}`,\r\n    label: value,\r\n  }));\r\n  return parsedData;\r\n};\r\n\r\nconst EditProfilePage = ({\r\n  loading,\r\n  error,\r\n  userCountryId,\r\n  profileFields,\r\n  getProfileFields,\r\n  updateProfileRespone,\r\n  makeUpdateProfileResponseToEmpty,\r\n  updateProfile,\r\n}) => {\r\n  document.title = `Chelsford | Edit Profile`;\r\n  const userId = getCookies(\"userId\");\r\n  const [errorFileds, setErrorFields] = useState([]);\r\n  const [fieldAnswers, setFieldAnswers] = useState([]);\r\n  const securityAnswerField = profileFields.find((field) =>\r\n    field.label.includes(\"Answer\")\r\n  );\r\n  const countryIdFieldCode= profileFields.find((field=>field.label.includes(\"Country\")))\r\n  useEffect(() => {\r\n    if (userCountryId !== \"\") {\r\n      getProfileFields({ userCountryId, userId });\r\n    }\r\n  }, [getProfileFields, userCountryId, userId]);\r\n\r\n  useEffect(() => {\r\n    setFieldAnswers(\r\n      profileFields.map((field) => {\r\n        return { fieldId: field.id, answer: field.inputField };\r\n      })\r\n    );\r\n  }, [profileFields]);\r\n\r\n  useEffect(() => {\r\n    if (!objectIsEmpty(updateProfileRespone)) {\r\n      const { error, message, customerData } = updateProfileRespone; \r\n      error === true\r\n        ? alert(message)\r\n        : profileUpdatedSuccessfully(customerData);\r\n      makeUpdateProfileResponseToEmpty();\r\n    }\r\n  }, [makeUpdateProfileResponseToEmpty, updateProfileRespone]);\r\n  const profileUpdatedSuccessfully =async (customer) => { \r\n          await  setCookies(\"customer_details\", customer);\r\n          await  history.push({\r\n                  pathname: `${history.location.state.next}`,\r\n                 }); \r\n      };\r\n\r\n  const handleChangefieldValue = ({ value, regex, id }) => {\r\n    setFieldAnswers(\r\n      getUniqueData(\r\n        [{ fieldId: id, answer: value }, ...fieldAnswers],\r\n        \"fieldId\"\r\n      )\r\n    );\r\n    value !== \"\" &&\r\n      setErrorFields(\r\n        getUniqueData(\r\n          [\r\n            { fieldId: id, error: !validateInput(regex, value) },\r\n            ...errorFileds,\r\n          ],\r\n          \"fieldId\"\r\n        )\r\n      );\r\n  };\r\n\r\n  const handleCheckBoxError = ({ isRequired, id, error }) => {\r\n    isRequired === true &&\r\n      setErrorFields(getUniqueData([{ id, error }, ...errorFileds], \"id\"));\r\n    return error;\r\n  };  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    return errorFileds.some((field) => field.error === true)\r\n      ? alert(\"Please fill required fields\")\r\n      :parseInt(countryIdFieldCode?.inputField) == parseInt(userCountryId)\r\n      ? updateProfile({ fieldAnswers, userId })\r\n      : alert(\"Please switch your country.\")\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UserInfoPageLayout>\r\n        <div className=\"fae--edit-profile-page-container\">\r\n          <div className=\"fae--edit-profile-page-wrapper\">\r\n            <FAETitle\r\n              label=\"Update Profile\"\r\n              className=\"fae--edit-title\"\r\n              logo={getFileSrcFromPublicFolder(\"title_logo.svg\")}\r\n            />\r\n            {loading && (\r\n              <FAELoading\r\n                type=\"svg\"\r\n                loaderImage={loaderImage}\r\n                height=\"200px\"\r\n              />\r\n            )}\r\n            {!loading && profileFields.length > 1 && (\r\n              <form\r\n                onSubmit={handleSubmit}\r\n                className=\"fae--edit-profile-page-form-wrapper\"\r\n              >\r\n                {Children.toArray(\r\n                  profileFields.map((field) => {\r\n                    const {\r\n                      type,\r\n                      regex,\r\n                      isRequired,\r\n                      errorMessage,\r\n                      label,\r\n                      id,\r\n                      optionList,\r\n                      inputField,\r\n                    } = field;\r\n                    const fieldType = type.toLowerCase();\r\n                    return (\r\n                      <>\r\n                        {(fieldType === \"text\" ||\r\n                          fieldType === \"email\" ||\r\n                          fieldType === \"password\") &&\r\n                          !label.includes(\"Answer\") && (\r\n                            <FAETextField\r\n                              label={label}\r\n                              placeholder={label}\r\n                              primary\r\n                              value={inputField}\r\n                              required={isRequired}\r\n                              type={fieldType}\r\n                              error={(value) =>\r\n                                value !== \"\" && !validateInput(regex, value)\r\n                              }\r\n                              errorMessage={errorMessage}\r\n                              getValue={(value) =>\r\n                                handleChangefieldValue({\r\n                                  value,\r\n                                  regex,\r\n                                  id,\r\n                                })\r\n                              }\r\n                              shadowBoxProps={{\r\n                                className: \"fae--edit-profile-page-field\",\r\n                              }}\r\n                              inputProps={{\r\n                                readOnly: fieldType === \"email\" && true,\r\n                              }}\r\n                            />\r\n                          )}\r\n                        {fieldType === \"date\" && (\r\n                          <FAEDatePicker\r\n                            label={label}\r\n                            primary\r\n                            shadowBoxProps={{\r\n                              className: \"fae--edit-profile-page-field\",\r\n                            }}\r\n                            required\r\n                            dateFormat={(date) =>\r\n                              `${date.year}-${\r\n                                `${date.month}`.length === 2\r\n                                  ? date.month\r\n                                  : `0${date.month}`\r\n                              }-${\r\n                                `${date.day}`.length === 2\r\n                                  ? date.day\r\n                                  : `0${date.day}`\r\n                              }`\r\n                            }\r\n                            value={\r\n                              inputField !== \"\" && {\r\n                                year: parseInt(inputField.split(\"-\")[0]),\r\n                                day: parseInt(inputField.split(\"-\")[2]),\r\n                                month: parseInt(inputField.split(\"-\")[1]),\r\n                              }\r\n                            }\r\n                            getSelectedDate={(date) =>\r\n                              handleChangefieldValue({\r\n                                id,\r\n                                value: `${date.year}-${\r\n                                  `${date.month}`.length === 2\r\n                                    ? date.month\r\n                                    : `0${date.month}`\r\n                                }-${\r\n                                  `${date.day}`.length === 2\r\n                                    ? date.day\r\n                                    : `0${date.day}`\r\n                                }`,\r\n                              })\r\n                            }\r\n                            maximumDate={eighteenYearsBackDate()}\r\n                          />\r\n                        )}\r\n                        {fieldType === \"radio\"  && optionList !==null && (\r\n                          <> \r\n                          <FAERadioGroup\r\n                            label={label}\r\n                            values={profileFormParser(optionList)}\r\n                            primary\r\n                            value={inputField}\r\n                            shadowBoxProps={{\r\n                              className: \"fae--edit-profile-page-field\",\r\n                            }}\r\n                            isRequired={isRequired}\r\n                            required={isRequired}\r\n                            getSelectedValue={(value) =>\r\n                              handleChangefieldValue({ id, value })\r\n                            }\r\n                          />\r\n                          </>\r\n                        )}\r\n                        {fieldType === \"phone\" && (\r\n                          <FAEPhoneInput\r\n                            label={label}\r\n                            primary\r\n                            value={inputField}\r\n                            isRequired={isRequired}\r\n                            required={isRequired}\r\n                            getValue={(value) =>\r\n                              handleChangefieldValue({ id, value })\r\n                            }\r\n                            shadowBoxProps={{\r\n                              className: \"fae--edit-profile-page-field\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                        {fieldType === \"select\" &&\r\n                        !label.includes(\"Security Question\") ? (\r\n                          <FAESelect\r\n                            label={label}\r\n                            primary\r\n                            shadowBoxProps={{\r\n                              className: \"fae--edit-profile-page-field\",\r\n                            }}\r\n                            values={profileFormParser(optionList)}\r\n                            required={isRequired}\r\n                            isRequired={isRequired}\r\n                            getSelectedValue={(value) =>\r\n                              handleChangefieldValue({ id, value })\r\n                            }\r\n                            value={inputField}\r\n                          />\r\n                        ) : (\r\n                          fieldType === \"select\" &&\r\n                          label.includes(\"Security Question\") && (\r\n                            <Fragment>\r\n                              <FAESelect\r\n                                label={label}\r\n                                primary\r\n                                shadowBoxProps={{\r\n                                  className: \"fae--edit-profile-page-field\",\r\n                                }}\r\n                                values={profileFormParser(optionList)}\r\n                                required={isRequired}\r\n                                isRequired={isRequired}\r\n                                getSelectedValue={(value) =>\r\n                                  handleChangefieldValue({ id, value })\r\n                                }\r\n                                value={inputField}\r\n                              />\r\n                              <FAETextField\r\n                                label={securityAnswerField.label}\r\n                                placeholder={securityAnswerField.label}\r\n                                primary\r\n                                required={securityAnswerField.isRequired}\r\n                                type={securityAnswerField.type}\r\n                                error={(value) =>\r\n                                  value !== \"\" &&\r\n                                  !validateInput(\r\n                                    securityAnswerField.regex,\r\n                                    value\r\n                                  )\r\n                                }\r\n                                value={securityAnswerField.inputField}\r\n                                errorMessage={securityAnswerField.errorMessage}\r\n                                getValue={(value) =>\r\n                                  handleChangefieldValue({\r\n                                    value,\r\n                                    regex: securityAnswerField.regex,\r\n                                    id: securityAnswerField.id,\r\n                                    isRequired: securityAnswerField.isRequired,\r\n                                    type: securityAnswerField.type.toLowerCase(),\r\n                                  })\r\n                                }\r\n                                shadowBoxProps={{\r\n                                  className: \"fae--edit-profile-page-field\",\r\n                                }}\r\n                                inputProps={{\r\n                                  readOnly:\r\n                                    securityAnswerField.type.toLowerCase() ===\r\n                                      \"email\" && true,\r\n                                }}\r\n                              />\r\n                            </Fragment>\r\n                          )\r\n                        )}\r\n                        {fieldType === \"checkbox\" && (\r\n                          <FAECheckBoxGroup\r\n                            label={label}\r\n                            values={profileFormParser(optionList)}\r\n                            primary\r\n                            shadowBoxProps={{\r\n                              className: \"fae--edit-profile-page-field\",\r\n                            }}\r\n                            error={(values) =>\r\n                              isRequired && values.length < 1\r\n                                ? handleCheckBoxError({\r\n                                    isRequired,\r\n                                    id,\r\n                                    error: true,\r\n                                  })\r\n                                : handleCheckBoxError({\r\n                                    isRequired,\r\n                                    id,\r\n                                    error: false,\r\n                                  })\r\n                            }\r\n                            errorMessage=\"Select at least 1\"\r\n                            isRequired={isRequired}\r\n                            getSelectedValues={(values) =>\r\n                              handleChangefieldValue({\r\n                                id,\r\n                                value: values.toString(),\r\n                              })\r\n                            }\r\n                          />\r\n                        )}\r\n                      </>\r\n                    );\r\n                  })\r\n                )}\r\n                <FAEButton className=\"fae--edit-profile-page-form-button\">\r\n                  Save Profile\r\n                </FAEButton>\r\n              </form>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </UserInfoPageLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  editProfilePageReducer: {\r\n    error,\r\n    loading,\r\n    profileFields,\r\n    saveSignUpFormResponse,\r\n    updateProfileRespone,\r\n  },\r\n  defaultReducer: { userCountryId },\r\n}) => ({\r\n  error,\r\n  loading,\r\n  profileFields,\r\n  userCountryId,\r\n  saveSignUpFormResponse,\r\n  updateProfileRespone,\r\n});\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getProfileFields,\r\n      makeUpdateProfileResponseToEmpty,\r\n      updateProfile,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfilePage);\r\n"],"sourceRoot":""}