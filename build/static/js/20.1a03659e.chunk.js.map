{"version":3,"sources":["Temps/FAEUserInfoTabs/FAEUserInfoTabs.js","Pages/UserInfoPageLayout/UserInfoPageLayout.js","redux/actions/addAddressPageActions.js","Pages/AddAddressPage/AddAddressPage.js"],"names":["FAEUserInfoTabs","_ref","_ref$className","className","_ref$tabs","tabs","renderOption","_ref$activeTab","activeTab","rest","_objectWithoutProperties","_excluded","selectedTab","value","toLowerCase","_jsx","_Fragment","children","_objectSpread","concat","Children","toArray","map","tab","index","label","_tab$href","href","icon","svgIconSrc","_excluded2","_jsxs","FAEText","tertiary","FAEImage","src","target","rel","userInfoTabs","getFileSrcFromPublicFolder","onClick","history","push","UserInfoPageLayout","childWidth","paddingTop","location","useLocation","pathname","find","addSpaces","includes","toLocaleLowerCase","FAEContainer","style","width","APP_BASE_URL","process","REACT_APP_BASE_URL","GOOGLE_MAP_API_KEY","REACT_APP_GOOGLE_MAP_API_KEY","getAddressSuggestions","fetchAction","type","headers","contentType","verb","endpoint","getPlaceDetails","placeId","saveAddress","userId","addressId","suggestionForProvider","lat","lng","radius","addressoperation","postCode","addressNickName","buildingNumber","streetAddress","city","payload","JSON","stringify","UserID","PostalCode","Address","Line1","Line2","TownCity","latitude","longitude","Radius","isResidentialAddress","isActive","ID","setSaveAddressResponseToEmpty","loaderImage","connect","_ref2","_ref2$addAddressPageR","addAddressPageReducer","error","loading","addressSuggestions","placeDetails","saveAddressResponse","_ref2$defaultReducer","defaultReducer","userLat","userLng","dispatch","bindActionCreators","_ref$saveAddressRespo","document","title","getCookies","useParams","state","redirectUrl","undefined","redirectedUrl","addressObj","address","_addressObj$line","line1","_addressObj$line2","line2","_addressObj$latitude","_addressObj$longitude","_addressObj$id","id","_useState","useState","_useState2","_slicedToArray","setLat","_useState3","_useState4","setLng","_useState5","_useState6","setAddress","_useState7","_useState8","setSuggestionForProvider","_useState9","_useState11","_useState12","setAddressNickName","_useState13","_useState14","setBuildingNumber","_useState15","_useState16","setStreetAddress","_useState17","_useState18","setCity","_useState19","_useState20","setPostCode","useEffect","parseInt","objectIsEmpty","message","alert","formatted_address","_placeDetails$geometr","geometry","address_components","divideAddress","onSubmit","e","preventDefault","FAELoading","height","FAEAutoComplete","onChange","placeholder","values","addressSuggestionsParser","getSelectedValue","required","isRequired","primary","FAEGoogleMap","apiKey","getMapValues","mapValues","mapAddress","addressComponents","handleChangeDragEvent","FAETextField","getValue","FAEButton","calssName"],"mappings":"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","file":"static/js/20.1a03659e.chunk.js","sourcesContent":["//libs\r\nimport React, { Children } from \"react\";\r\n\r\n//src\r\nimport { FAEText } from \"@findanexpert-fae/components\";\r\n\r\n//scss\r\nimport \"./FAEUserInfoTabs.scss\";\r\nimport { FAEImage } from \"@findanexpert-fae/components/dist/stories/FAEImage/FAEImage\";\r\n\r\nexport const FAEUserInfoTabs = ({\r\n  className = \"\",\r\n  tabs = [],\r\n  renderOption,\r\n  activeTab = \"\",\r\n  ...rest\r\n}) => {\r\n  const selectedTab = (value) => {\r\n    return value.toLowerCase() === activeTab.toLowerCase() ? \"active-tab\" : \"\";\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className={`fae--user-info-tabs-main-container ${className}`}\r\n        {...rest}\r\n      >\r\n        {Children.toArray(\r\n          tabs.map((tab, index) => {\r\n            const { label, href = \"\", className, icon, svgIconSrc, ...rest } = tab;\r\n            return href === \"\" ? (\r\n             <> \r\n           \r\n             <FAEText\r\n                tertiary={selectedTab(label) === \"active-tab\" ? false : true}\r\n                {...rest}\r\n                className={`fae--user-info-tab ${selectedTab(\r\n                  label\r\n                )} ${className}`}  >\r\n                {!svgIconSrc==\"\" && <FAEImage className=\"fae-sidebar-icon\" src={svgIconSrc} />}\r\n                {!icon==\"\" && <div className=\"fae-sidebar-icon\"> {icon}  </div>}\r\n                 {renderOption ? renderOption(tab) : label}\r\n              </FAEText>\r\n              </>\r\n            ) : (\r\n              <a\r\n                className={`fae--user-info-tab ${className}`}\r\n                target=\"_blank\"\r\n                href={href}\r\n                rel=\"noreferrer\"\r\n                {...rest}\r\n              >\r\n                <FAEText>{renderOption ? renderOption(tab) : label}</FAEText>\r\n              </a>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","//libs\r\nimport React from \"react\";\r\nimport {  FAEContainer } from \"@findanexpert-fae/components\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\n//src\r\nimport { addSpaces, getFileSrcFromPublicFolder } from \"../../utils\";\r\nimport history from \"../../history\";\r\nimport {FAEUserInfoTabs} from \"../../Temps/FAEUserInfoTabs/FAEUserInfoTabs\"\r\n//scss\r\nimport \"./UserInfoPageLayout.scss\";\r\nimport { FAEImage } from \"@findanexpert-fae/components/dist/stories/FAEImage/FAEImage\";\r\n \r\nconst userInfoTabs = [\r\n  {\r\n    label: \"Profile\",\r\n    svgIconSrc:  getFileSrcFromPublicFolder(\"icons/profileIcon.svg\"),\r\n    onClick: () => history.push(\"/profile\"),\r\n  },\r\n  {\r\n    label: \"Your Bookings\",\r\n    svgIconSrc:  getFileSrcFromPublicFolder(\"icons/bookingGreyColor.svg\"),\r\n    onClick: () => history.push(\"/your-bookings/upcoming\"),\r\n  }, \r\n  // {\r\n  //   label: \"Your Addresses\",\r\n  //   svgIconSrc:  getFileSrcFromPublicFolder(\"icons/locationgrey.svg\"),\r\n  //   onClick: () => history.push(\"/your-addresses\"),\r\n  // }, \r\n  {\r\n    label: \"Payment Details\",\r\n    svgIconSrc:  getFileSrcFromPublicFolder(\"icons/paymentgreyicons.svg\"),\r\n    onClick: () => history.push(\"/payment-details\"),\r\n  },\r\n  // {\r\n  //   label: \"Switch Country\",\r\n  //   svgIconSrc:  getFileSrcFromPublicFolder(\"icons/swithc-country.svg\"),\r\n  //   onClick: () => history.push(\"/switch-country\"),\r\n  // }, \r\n  // {\r\n  //   label:  \"Your Vouchers\", \r\n  //   svgIconSrc:  getFileSrcFromPublicFolder(\"icons/vouchergrey.svg\"),\r\n  //   onClick: () => history.push(\"/your-vouchers/service-voucher\"),\r\n  // }, \r\n];\r\n\r\nconst getActiveTab = (value) => {\r\n\r\n  return userInfoTabs.find(\r\n    (tab) =>\r\n      addSpaces(value, \"-\").includes(tab.label.toLocaleLowerCase()) === true\r\n  ).label;\r\n};\r\n \r\nconst UserInfoPageLayout = ({ childWidth, children, paddingTop }) => {\r\n  const location = useLocation();\r\n \r\n  const activeTab = getActiveTab(location.pathname);\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"fae--user-info-page-layout-main-container\">\r\n        <FAEUserInfoTabs\r\n          tabs={userInfoTabs}\r\n          activeTab={activeTab}\r\n          className=\"side-tabs-user-info\"\r\n        />\r\n        <div\r\n          className={`fae--user-info-page-layout-pages-data dpb ${\r\n            paddingTop ?? \"\"\r\n          }`}\r\n        >\r\n          <FAEContainer className=\"fae-page-classname\">\r\n            <div style={{ width: childWidth ?? \"100%\" }}> {children}</div>\r\n          </FAEContainer>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserInfoPageLayout;\r\n","import { fetchAction } from \"../utils\";\r\n\r\nconst APP_BASE_URL = process.env.REACT_APP_BASE_URL;\r\nconst GOOGLE_MAP_API_KEY = process.env.REACT_APP_GOOGLE_MAP_API_KEY;\r\n\r\nexport const getAddressSuggestions = (value) => {\r\n  return fetchAction({\r\n    type: \"ADDRESS_PREDICTIONS\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    verb: \"GET\",\r\n    endpoint: `${APP_BASE_URL}/GoogleApi/predictions/${value}/${GOOGLE_MAP_API_KEY}`,\r\n  });\r\n};\r\n\r\nexport const getPlaceDetails = (placeId) => {\r\n  return fetchAction({\r\n    type: \"GET_PLACE_DETAILS\",\r\n    verb: \"GET\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/GoogleApi/placedetails/${placeId}/${GOOGLE_MAP_API_KEY}`,\r\n  });\r\n};\r\n\r\nexport const saveAddress = ({\r\n  userId,\r\n  addressId,\r\n  suggestionForProvider,\r\n  lat,\r\n  lng,\r\n  radius,\r\n  addressoperation,\r\n  postCode,\r\n  addressNickName,\r\n  buildingNumber,\r\n  streetAddress,\r\n  city,\r\n}) => {\r\n  return fetchAction({\r\n    type: \"SAVE_ADDRESS\",\r\n    verb: \"POST\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/Providers/Address/${addressoperation}`,\r\n    payload: JSON.stringify({\r\n      UserID: userId,\r\n      PostalCode: postCode,\r\n      Address: suggestionForProvider,\r\n      Line1: addressNickName,\r\n      Line2: `${buildingNumber} ${streetAddress}`,\r\n      TownCity: city,\r\n      latitude: lat,\r\n      longitude: lng,\r\n      Radius: radius,\r\n      isResidentialAddress: true,\r\n      isActive: true,\r\n      ID: addressId,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const setSaveAddressResponseToEmpty = () => {\r\n  return {\r\n    type: \"SET_SAVE_ADDRESS_RESPONSE_TO_EMPTY\",\r\n  };\r\n};\r\n","//libs\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FAEAutoComplete,\r\n  FAEGoogleMap,\r\n  FAETextField,\r\n  FAEButton,\r\n  FAELoading,\r\n} from \"@findanexpert-fae/components\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\n\r\n//src\r\nimport {\r\n  getAddressSuggestions,\r\n  getPlaceDetails,\r\n  setSaveAddressResponseToEmpty,\r\n  saveAddress,\r\n} from \"../../redux/actions/addAddressPageActions\";\r\nimport UserInfoPageLayout from \"../UserInfoPageLayout\";\r\nimport { addressSuggestionsParser } from \"../../parsers\";\r\nimport {\r\n  divideAddress,\r\n  getCookies,\r\n  getFileSrcFromPublicFolder,\r\n  objectIsEmpty,\r\n} from \"../../utils\";\r\nimport history from \"../../history\";\r\n\r\n//scss\r\nimport \"./AddAddressPage.scss\";\r\n\r\nconst loaderImage = getFileSrcFromPublicFolder(\"loader.GIF\");\r\nconst GOOGLE_MAP_API_KEY = process.env.REACT_APP_GOOGLE_MAP_API_KEY;\r\n\r\nconst AddAddressPage = ({\r\n  loading,\r\n  error,\r\n  addressSuggestions,\r\n  getAddressSuggestions,\r\n  getPlaceDetails,\r\n  placeDetails,\r\n  saveAddressResponse = {},\r\n  setSaveAddressResponseToEmpty,\r\n  saveAddress,\r\n  userLat,\r\n  userLng,\r\n}) => {\r\n  document.title = `Chelsford | Add Address`;\r\n  const userId = getCookies(\"userId\");\r\n  const location = useLocation();\r\n  const { addressoperation } = useParams();\r\n  const { state } = location;\r\n  const redirectUrl =\r\n    state.redirectedUrl !== undefined\r\n      ? `${state.redirectedUrl}`\r\n      : \"/your-addresses\";\r\n  const addressObj = state.address !== undefined ? state.address : {};\r\n  const {\r\n    line1 = \"\",\r\n    line2 = \"\",\r\n    latitude = 0,\r\n    longitude = 0,\r\n    id = \"\",\r\n  } = addressObj;\r\n  const [lat, setLat] = useState(latitude);\r\n  const [lng, setLng] = useState(longitude);\r\n  const [address, setAddress] = useState(line1);\r\n  const [suggestionForProvider, setSuggestionForProvider] = useState(line2);\r\n  const [addressId] = useState(id);\r\n  const [addressNickName, setAddressNickName] = useState(\"\");\r\n  const [buildingNumber, setBuildingNumber] = useState(\"\");\r\n  const [streetAddress, setStreetAddress] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [postCode, setPostCode] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (userLat !== 0 && userLng !== 0 && lat === 0 && lng === 0) {\r\n      setLat(parseInt(userLat));\r\n      setLng(parseInt(userLng));\r\n    }\r\n  }, [lat, lng, userLat, userLng]);\r\n\r\n  useEffect(() => {\r\n    if (!objectIsEmpty(saveAddressResponse)) {\r\n      const { message, error } = saveAddressResponse;\r\n      error === true\r\n        ? alert(message)\r\n        : history.push({\r\n            pathname: redirectUrl,\r\n            state: state === undefined ? \"\" : { ...state },\r\n          });\r\n      setSaveAddressResponseToEmpty();\r\n    }\r\n  }, [redirectUrl, saveAddressResponse, setSaveAddressResponseToEmpty, state]);\r\n\r\n  const handleChangeDragEvent = (mapValues) => {\r\n    const { mapAddress, lat, lng, addressComponents } = mapValues;\r\n    setAddress(mapAddress);\r\n    setLat(lat);\r\n    setLng(lng);\r\n    setStreetAddress(divideAddress(addressComponents).streetAddress);\r\n    setBuildingNumber(divideAddress(addressComponents).buildingNumber);\r\n    setCity(divideAddress(addressComponents).city);\r\n    setPostCode(divideAddress(addressComponents).postCode);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!objectIsEmpty(placeDetails)) {\r\n      const {\r\n        formatted_address,\r\n        geometry: {\r\n          location: { lat, lng },\r\n        },\r\n        address_components,\r\n      } = placeDetails;\r\n      setAddress(formatted_address);\r\n      setLat(lat);\r\n      setLng(lng);\r\n      setStreetAddress(divideAddress(address_components).streetAddress);\r\n      setBuildingNumber(divideAddress(address_components).buildingNumber);\r\n      setCity(divideAddress(address_components).city);\r\n      setPostCode(divideAddress(address_components).postCode);\r\n    }\r\n  }, [placeDetails]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    return saveAddress({\r\n      userId,\r\n      radius: 0,\r\n      suggestionForProvider,\r\n      lat,\r\n      lng,\r\n      addressId,\r\n      addressoperation,\r\n      postCode,\r\n      city,\r\n      buildingNumber,\r\n      streetAddress,\r\n      addressNickName,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UserInfoPageLayout>\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          className=\"fae--add-address-page-main-container\"\r\n        >\r\n          {loading && (\r\n            <FAELoading type=\"svg\" loaderImage={loaderImage} height=\"200px\" />\r\n          )}\r\n          {!loading && (\r\n            <>\r\n              <FAEAutoComplete\r\n                type=\"search\"\r\n                onChange={(e) => getAddressSuggestions(e.target.value)}\r\n                label=\"Address\"\r\n                placeholder=\"Address\"\r\n                values={addressSuggestionsParser(addressSuggestions)}\r\n                getSelectedValue={(placeId) => getPlaceDetails(placeId)}\r\n                value={{ label: address }}\r\n                required={true}\r\n                isRequired={true}\r\n                primary\r\n              />\r\n              <FAEGoogleMap\r\n                apiKey={GOOGLE_MAP_API_KEY}\r\n                lat={lat}\r\n                lng={lng}\r\n                address={address}\r\n                getMapValues={(e) => handleChangeDragEvent(e)}\r\n                className=\"fae--add-address-page-google-map\"\r\n              />\r\n              <FAETextField\r\n                label=\"Nickname this Address (Home / Work)\"\r\n                getValue={setAddressNickName}\r\n                value={addressNickName}\r\n                placeholder=\"Nickname this Address (Home / Work)\"\r\n                primary\r\n                required={true}\r\n                isRequired={true}\r\n              />\r\n              <FAETextField\r\n                label=\"Building Number / Number\"\r\n                value={buildingNumber}\r\n                placeholder=\"Building Number / Number\"\r\n                getValue={setBuildingNumber}\r\n                primary\r\n                required={true}\r\n                isRequired={true}\r\n              />\r\n              <FAETextField\r\n                label=\"Street Address\"\r\n                getValue={setStreetAddress}\r\n                value={streetAddress}\r\n                placeholder=\"Street Address\"\r\n                primary\r\n                required={true}\r\n                isRequired={true}\r\n              />\r\n              <FAETextField\r\n                label=\"City\"\r\n                getValue={setCity}\r\n                value={city}\r\n                placeholder=\"City\"\r\n                primary\r\n                required={true}\r\n                isRequired={true}\r\n              />\r\n              <FAETextField\r\n                label=\"Post Code / Zip Code\"\r\n                getValue={setPostCode}\r\n                value={postCode}\r\n                placeholder=\"Post Code / Zip Code\"\r\n                primary\r\n                required={true}\r\n                isRequired={true}\r\n              />\r\n              <FAETextField\r\n                label=\"Address Notes (Optional)\"\r\n                getValue={setSuggestionForProvider}\r\n                value={suggestionForProvider}\r\n                placeholder=\"Address Notes (Optional)\"\r\n                primary\r\n              />\r\n              <FAEButton calssName=\"fae--add-address-button\">\r\n                Save Address\r\n              </FAEButton>\r\n            </>\r\n          )}\r\n        </form>\r\n      </UserInfoPageLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  addAddressPageReducer: {\r\n    error,\r\n    loading,\r\n    addressSuggestions,\r\n    placeDetails,\r\n    saveAddressResponse,\r\n  },\r\n  defaultReducer: { userLat, userLng },\r\n}) => ({\r\n  error,\r\n  loading,\r\n  addressSuggestions,\r\n  placeDetails,\r\n  saveAddressResponse,\r\n  userLat,\r\n  userLng,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      getAddressSuggestions,\r\n      getPlaceDetails,\r\n      setSaveAddressResponseToEmpty,\r\n      saveAddress,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddAddressPage);\r\n"],"sourceRoot":""}