{"version":3,"sources":["redux/actions/codeVerificationPageActions.js","Pages/CodeVerificationPage/CodeVerificationPage.js"],"names":["APP_BASE_URL","process","REACT_APP_BASE_URL","verifyCode","code","email","fetchAction","type","verb","headers","contentType","endpoint","concat","payload","JSON","stringify","ActivationCode","setVerifyCodeResponseToEmpty","loaderImage","getFileSrcFromPublicFolder","connect","_ref2","_ref2$codeVerificatio","codeVerificationPageReducer","error","loading","verifyCodeResponse","dispatch","bindActionCreators","_ref","_useState","useState","_useState2","_slicedToArray","setCode","useLocation","state","useEffect","length","objectIsEmpty","statusCode","message","alert","history","push","_jsx","_Fragment","children","className","_jsxs","FAETitle","label","logo","FAELoading","height","FAECodeInput","getValue"],"mappings":"wQAEMA,EAAeC,mIAAYC,mBAEpBC,EAAa,SAACC,EAAMC,GAC/B,OAAOC,YAAY,CACjBC,KAAM,cACNC,KAAM,OACNC,QAAS,CAAEC,YAAa,iBACxBC,SAAS,GAADC,OAAKZ,EAAY,iCACzBa,QAASC,KAAKC,UAAU,CACtBC,eAAgBZ,EAChBC,MAAOA,KAGb,EAEaY,EAA+B,WAC1C,MAAO,CACLV,KAAM,oCAEV,E,iCCCMW,EAAcC,YAA2B,cAkEhCC,eAlBS,SAAHC,GAAA,IAAAC,EAAAD,EACnBE,4BAAiE,MAC5D,CACLC,MAFoCF,EAALE,MAG/BC,QAH6CH,EAAPG,QAItCC,mBAJiEJ,EAAlBI,mBAKhD,IAE0B,SAACC,GAC1B,OAAOC,YACL,CACEzB,aACAc,gCAEFU,EAEJ,GAEeP,EAhEc,SAAHS,GAMnB,IALLZ,EAA4BY,EAA5BZ,6BAEAQ,GADKI,EAALL,MACOK,EAAPJ,SACAtB,EAAU0B,EAAV1B,WACAuB,EAAkBG,EAAlBH,mBAEAI,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7B1B,EAAI4B,EAAA,GAAEE,EAAOF,EAAA,GAIT3B,EAFM8B,cAEfC,MAAS/B,MAkBX,OAfAgC,qBAAU,WACY,IAAhBjC,EAAKkC,QACPnC,EAAWC,EAAMC,EAErB,GAAG,CAACD,EAAMC,EAAOF,IAEjBkC,qBAAU,WACR,IAAKE,YAAcb,GAAqB,CACtC,IAAQc,EAAwBd,EAAxBc,WAAYC,EAAYf,EAAZe,QAEL,IAAfD,EAAmBE,MAAMD,GAAWE,IAAQC,KAAK,YACjD3B,GACF,CACF,GAAG,CAACS,EAAoBT,IAGtB4B,cAAAC,WAAA,CAAAC,SACEF,cAAA,OAAKG,UAAU,gDAA+CD,SAC5DE,eAAA,OAAKD,UAAU,sCAAqCD,SAAA,CAClDF,cAACK,WAAQ,CACPC,MAAM,iBACNC,KAAMjC,YAA2B,oBAElCM,GACCoB,cAACQ,aAAU,CAAC9C,KAAK,MAAMW,YAAaA,EAAaoC,OAAO,WAExD7B,GAAWoB,cAACU,eAAY,CAACC,SAAUtB,UAK/C,G","file":"static/js/59.11a4ff74.chunk.js","sourcesContent":["import { fetchAction } from \"../utils\";\r\n\r\nconst APP_BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const verifyCode = (code, email) => {\r\n  return fetchAction({\r\n    type: \"VERIFY_CODE\",\r\n    verb: \"POST\",\r\n    headers: { contentType: \"includeBearer\"},\r\n    endpoint: `${APP_BASE_URL}/Customer/CustomerConfirmCode`,\r\n    payload: JSON.stringify({\r\n      ActivationCode: code,\r\n      email: email,\r\n    }),\r\n  });\r\n};\r\n\r\nexport const setVerifyCodeResponseToEmpty = () => {\r\n  return {\r\n    type: \"SET_VERIFY_CODE_RESPONSE_TO_EMPTY\",\r\n  };\r\n};\r\n","//libs\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FAECodeInput,\r\n  FAETitle,\r\n  FAELoading,\r\n} from \"@findanexpert-fae/components\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//src\r\nimport {\r\n  setVerifyCodeResponseToEmpty,\r\n  verifyCode,\r\n} from \"../../redux/actions/codeVerificationPageActions\";\r\nimport { getFileSrcFromPublicFolder, objectIsEmpty } from \"../../utils\";\r\nimport history from \"../../history\";\r\n\r\n//scss\r\nimport \"./CodeVerificationPage.scss\";\r\n\r\nconst loaderImage = getFileSrcFromPublicFolder(\"loader.GIF\");\r\n\r\nconst CodeVerificationPage = ({\r\n  setVerifyCodeResponseToEmpty,\r\n  error,\r\n  loading,\r\n  verifyCode,\r\n  verifyCodeResponse,\r\n}) => {\r\n  const [code, setCode] = useState(\"\");\r\n\r\n  const location = useLocation();\r\n  const {\r\n    state: { email },\r\n  } = location;\r\n\r\n  useEffect(() => {\r\n    if (code.length === 6) {\r\n      verifyCode(code, email);\r\n    }\r\n  }, [code, email, verifyCode]);\r\n\r\n  useEffect(() => {\r\n    if (!objectIsEmpty(verifyCodeResponse)) {\r\n      const { statusCode, message } = verifyCodeResponse;\r\n      // signin changes link\r\n      statusCode !== 0 ? alert(message) : history.push(\"/sign-in\");\r\n      setVerifyCodeResponseToEmpty();\r\n    }\r\n  }, [verifyCodeResponse, setVerifyCodeResponseToEmpty]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"fae--code-verification-page-container dpt dpb\">\r\n        <div className=\"fae--code-verification-page-wrapper\">\r\n          <FAETitle\r\n            label=\"Verify Account\"\r\n            logo={getFileSrcFromPublicFolder(\"title_logo.svg\")}\r\n          />\r\n          {loading && (\r\n            <FAELoading type=\"svg\" loaderImage={loaderImage} height=\"150px\" />\r\n          )}\r\n          {!loading && <FAECodeInput getValue={setCode} />}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = ({\r\n  codeVerificationPageReducer: { error, loading, verifyCodeResponse },\r\n}) => ({\r\n  error,\r\n  loading,\r\n  verifyCodeResponse,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      verifyCode,\r\n      setVerifyCodeResponseToEmpty,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CodeVerificationPage);\r\n"],"sourceRoot":""}